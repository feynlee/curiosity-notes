<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>curiosity-notes</title>
<link>https://feynlee.github.io/curiosity-notes/index.html</link>
<atom:link href="https://feynlee.github.io/curiosity-notes/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Tue, 20 Jun 2023 00:00:00 GMT</lastBuildDate>
<item>
  <title>How to Release Your First iOS App</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2023-06-20-How_to_Release_Your_First_iOS_App.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://feynlee.github.io/curiosity-notes/Apps/Long-Text-Pic.html"><img src="https://feynlee.github.io/curiosity-notes/posts/images/2023/Long-Text-Pic-banner.png" class="img-fluid figure-img" style="width:80.0%"></a></p>
</figure>
</div>
<!--  -->
<p>I just released <a href="http://feynlee.github.io/curiosity-notes/Apps/Long-Text-Pic.html">my first iOS app</a>, and man did I underestimate the App Submission process! I wish there was a handy compilation of resources and tips from someone that just went through this. That could’ve saved me loads of time!</p>
<p>So I’m sharing my learnings here for people like me.</p>
<p><a href="https://www.youtube.com/watch?v=ykiD5wqwSe4&amp;embeds_referring_euri=http%3A%2F%2Flocalhost%3A3682%2F&amp;source_ve_path=OTY3MTQ&amp;feature=emb_imp_woyt">This video</a> provides great instructions on how to submit your app to the App Store. I won’t repeat what has already been mentioned in the video. Instead, I will focus on the issues I encountered during the submission process that are not covered in the video.</p>
<section id="you-can-bypass-setting-up-export-compliance-in-app-store-connect" class="level2">
<h2 class="anchored" data-anchor-id="you-can-bypass-setting-up-export-compliance-in-app-store-connect">You Can Bypass Setting Up Export Compliance in App Store Connect</h2>
<p>After archiving your app and uploading it to App Store Connect, you will be prompted to set up export compliance. Refer to the screenshot below to see the “missing compliance” status for BUILD 2.</p>
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2023/missing_compliance.png" class="img-fluid" alt="missing_compliance"> <img src="https://feynlee.github.io/curiosity-notes/posts/images/2023/export_compliance_info.png" class="img-fluid" alt="export_compliance"></p>
<p>You can actually bypass the process of setting up export compliance in App Store Connect by specifying your use of encryption directly in the information property list (Info.plist) of your Xcode project.</p>
<p>To do this, add the <code>App Uses Non-Exempt Encryption</code> key to your Info.plist file and set its value to <code>NO</code>.</p>
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2023/ITSAppUsesNonExemptEncryption.png" class="img-fluid"></p>
</section>
<section id="testflight" class="level2">
<h2 class="anchored" data-anchor-id="testflight">TestFlight</h2>
<p>Make use of TestFlight to ensure that your app functions properly before submission!</p>
<p>You can set up a beta testing group and add yourself as a tester.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2023/testflight.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">testflight</figcaption>
</figure>
</div>
<p>Next, download the TestFlight app from the App Store and install your app for testing purposes. During testing, you will not be charged for in-app purchases when you click on the purchase button.</p>
<p>I neglected to use TestFlight for beta testing my app, and as a result, I had to wait for two days for my app to be rejected due to missing in-app purchases, as explained in the next section. Subsequently, it took an additional day for my app to be approved after resolving these issues.</p>
</section>
<section id="in-app-purchase" class="level2">
<h2 class="anchored" data-anchor-id="in-app-purchase">In-App Purchase</h2>
<section id="how-to-set-up-in-app-purchase-in-your-code" class="level3">
<h3 class="anchored" data-anchor-id="how-to-set-up-in-app-purchase-in-your-code">How to Set Up In-App Purchase in Your Code</h3>
<p></p><div id="youtube-frame" style="position: relative; padding-bottom: 56.25%; /* 16:9 */ height: 0;"><iframe width="100%" height="" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" src="https://www.youtube.com/embed/jLA0r7cvePo" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p></p>
<p>You can obtain the author’s <a href="https://github.com/olopsman/storekit2-youtube-demo">demo code</a> from GitHub. With minimal modifications, you can utilize the demo code to implement in-app purchases in your app.</p>
</section>
<section id="setting-up-in-app-purchase-on-app-store-connect" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-in-app-purchase-on-app-store-connect">Setting Up In-App Purchase on App Store Connect</h3>
<ul>
<li><p>Product IDs</p>
<p>While I was following the video without fully comprehending how product IDs are used, I encountered some issues when submitting my app on App Store Connect.</p>
<p>Here’s the crucial part that I overlooked:</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>The Product IDs you set up on App Store Connect must match those you used during local testing, specifically the ones you configured with the <code>Product.storekit</code> file.</p>
</div>
</div>
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2023/in_app_purchase-app_store_connect.png" class="img-fluid"></p>
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2023/in_app_purchase-xcode.png" class="img-fluid"></p>
<p>Failing to do so will result in your app being unable to find the expected products, and the in-app purchase will not appear correctly. This is where beta testing with TestFlight would have been beneficial in identifying this issue.</p></li>
<li><p>Paid Agreement</p>
<p>There are <a href="https://developer.apple.com/help/app-store-connect/configure-in-app-purchase-settings/overview-for-configuring-in-app-purchases">a few other configurations</a> required for In-App Purchase. One of them is to accept the paid agreement. You can find the paid agreement in the “Agreements, Tax, and Banking” section of App Store Connect.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2023/paid_agreement.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">paid_agreement</figcaption>
</figure>
</div>
<p>You will need to set up a bank account for accepting payments, which leads us to the next section: sole proprietorship.</p></li>
</ul>
</section>
</section>
<section id="sole-proprietorship" class="level2">
<h2 class="anchored" data-anchor-id="sole-proprietorship">Sole Proprietorship</h2>
<p>If you’re a solo developer in the U.S., like myself, working on your first app as a side hustle, you are technically a sole proprietor without the need to register anything with the government. <strong>However, please note that I am not a lawyer, and this is not legal advice.</strong> It’s important to consult with your local government to determine the requirements for establishing a sole proprietorship.</p>
<p>As a sole proprietor, it’s recommended to keep your personal and business finances separate by setting up a business bank account. Contrary to my initial expectations, obtaining a business bank account turned out to be much easier than anticipated. I opted for one from <a href="http://novo.co">Novo</a>, which offers zero monthly fees, zero minimum balance, and exclusive partner perks. My application was approved within a day.</p>
<p>You can use my <a href="https://onboarding.novo.co/signup?referral_code=ZiyueLi">referral link</a> to receive $40 when opening a new account with Novo.</p>
<p>Having a business bank account will help you maintain separate records for your business transactions, simplifying the process during tax season.</p>
</section>
<section id="app-preview" class="level2">
<h2 class="anchored" data-anchor-id="app-preview">App Preview</h2>
<p>When providing screenshots, it is important to adhere to specific sizes. To create visually appealing screenshots, you can utilize free tools such as <a href="https://app-mockup.com">https://app-mockup.com</a> or <a href="https://app.flycricket.com">https://app.flycricket.com</a>.</p>
<p>Additionally, you may need to prepare screenshots for the 5.5” iPhone screen size.</p>
</section>
<section id="privacy-policy" class="level2">
<h2 class="anchored" data-anchor-id="privacy-policy">Privacy Policy</h2>
<p>As a first-time app creator, I was unaware that releasing an app requires more than just the app itself. Creating a privacy policy seemed daunting, and I didn’t want to incur the expense of hiring a lawyer.</p>
<p>After conducting some research, I came across the website <a href="https://app-privacy-policy-generator.firebaseapp.com">https://app-privacy-policy-generator.firebaseapp.com</a>, which has been utilized by many solo developers.</p>
<p>You can host your privacy policy for free on <a href="https://www.flycricket.com">flycricket</a>.</p>
</section>
<section id="support-url" class="level2">
<h2 class="anchored" data-anchor-id="support-url">Support URL</h2>
<p>A support URL is a required element. Some people suggest that using a WordPress website, a Facebook page, or other social media pages is sufficient. However, I created <a href="https://feynlee.github.io/curiosity-notes/Apps/Long-Text-Pic.html">a dedicated page for my app</a>, which also serves as a marketing page.</p>
<p>You can use <a href="https://www.flycricket.com">flycricket</a> to create a support email.</p>
</section>
<section id="marketing-assets" class="level2">
<h2 class="anchored" data-anchor-id="marketing-assets">Marketing Assets</h2>
<p>Once your app is approved, you can obtain a link to the app and relevant marketing materials, including a QR code and the App Store badge, using the App Store Marketing Tools available at <a href="https://developer.apple.com/app-store/marketing/guidelines/">https://developer.apple.com/app-store/marketing/guidelines/</a>.</p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>

 ]]></description>
  <category>Programming</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2023-06-20-How_to_Release_Your_First_iOS_App.html</guid>
  <pubDate>Tue, 20 Jun 2023 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/2023/Long-Text-Pic-banner.png" medium="image" type="image/png" height="115" width="144"/>
</item>
<item>
  <title>Eclipse on Pandora and the Orbital Physics in Avatar</title>
  <dc:creator>ziyue li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2022-12-23-Eclipse_on_pandora_and_orbital_physics.html</link>
  <description><![CDATA[ 




<section id="eclipse-on-pandora" class="level1">
<h1>Eclipse on Pandora</h1>
<p>After watching <a href="https://en.wikipedia.org/wiki/Avatar:_The_Way_of_Water">Avatar: The Way of Water</a>, I’m quite intrigued by the eclipse in the movie. The sun is blocked by the gas giant for what appears to be a couple of hours, which seems to make sense if you assume that the sun travels across the sky in a similar amount of time as what we experience on Earth.</p>
<p>However, on a deeper thought, the situation here is more complicated than that.</p>
<p>The fact that we have sunrise and sunset on Earth is because of the Earth’s rotation, and the eclipse only lasts a short while because the moon is very small in the sky, and its shadow does not cover the whole Earth.</p>
<p>But on Pandora, the gas giant it’s orbiting around is much bigger, and if we use Jupiter and its moons as a reference, then the shadow of the gas giant is probably bigger than Pandora. In that case, the spinning of Pandora does not get it out of the “shadow zone”. It can only get out of the shadow when Pandora travels across the gas giant’s shadow.</p>
<p>So now the question is, in this case, is it possible that the Eclipse only lasts a few hours? Here’s my analysis of this system, with some of the simplest assumptions</p>
</section>
<section id="orbital-period" class="level1">
<h1>Orbital Period</h1>
<p>From the balance of centripetal force and gravitational force: <img src="https://latex.codecogs.com/png.latex?m%5Cfrac%7Bv%5E2%7D%7Br%7D=G%5Cfrac%7BmM%7D%7Br%5E2%7D"></p>
<p>we have the velocity of the planet Pandora around the gas giant: <img src="https://latex.codecogs.com/png.latex?v=%5Csqrt%7B%5Cfrac%7BGM%7D%7Br%7D%7D"></p>
<p>Therefore the period of the orbit is <img src="https://latex.codecogs.com/png.latex?T=2%5Cpi%20r/v=2%5Cpi%5Csqrt%7B%5Cfrac%7Br%5E3%7D%7BGM%7D%7D"></p>
<p>We don’t know the mass of the gas giant in the movie, but we do have reference for how big the gas giant looks like from Pandora, which gives us an estimate of the ratio of the size of the gas giant to the distance between Pandora and the gas giant, as will be explained below.</p>
<p>So we rewrite the mass as a function of the gas giant’s size: <img src="https://latex.codecogs.com/png.latex?M=4%5Cpi%20R%5E3/3*%5Crho">, and get <img src="https://latex.codecogs.com/png.latex?T=2%5Cpi%20%5Csqrt%7B%5Cfrac%7Br%5E3%7D%7BR%5E3%7D%7D%5Csqrt%7B%5Cfrac%7B3%7D%7B4%5Cpi%20G%20%5Crho%7D%7D"></p>
<p>Besides the ratio of <img src="https://latex.codecogs.com/png.latex?r/R">, it only depends on the density of the Gas Giant.</p>
<ul>
<li><p>Estimation of <img src="https://latex.codecogs.com/png.latex?r/R"></p>
<p>The arc length extended by the gas giant in Pandora’s sky is approximately its diameter <img src="https://latex.codecogs.com/png.latex?2R"> (we are only doing estimations here). Dividing that by half the circumference of the orbit gives us the ratio of the angular size <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> to <img src="https://latex.codecogs.com/png.latex?%5Cpi">: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Cdelta%7D%7B%5Cpi%7D%5Capprox%5Cfrac%7B2R%7D%7B%5Cpi%20r%7D,"></p>
<p>From some shots in the movie, we can get a sense of how big the gas giant looks like from Pandora.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2022/angular_size_measurement.jpg" class="img-fluid figure-img"></p>
</figure>
</div>
<p>In the shot above, if we take the smaller planet (circled) as having the same angular size as the sun seen from the Earth (<img src="https://latex.codecogs.com/png.latex?0.53%5E%7B%5Ccirc%7D">), then a rough measurement shows that the apparent size of the gas giant is about 22 times <img src="https://latex.codecogs.com/png.latex?%5Cdelta%20=%2022%20*%200.53%5E%7B%5Ccirc%7D%20%5Capprox%2011%5E%7B%5Ccirc%7D%20%5Capprox%20%5Cfrac%7B%5Cpi%7D%7B18%7D%20"></p>
<p>To get better estimation, let’s take a range. Let’s say that that the gas giants fills up <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B18%7D"> to <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B9%7D"> of the sky, i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B18%7D%5Clt%5Cdelta/%5Cpi%5Clt%5Cfrac%7B1%7D%7B9%7D">, then we have <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B11.5%7D%20%5Capprox%20%5Cfrac%7B%5Cpi%7D%7B2%7D%5Cfrac%7B1%7D%7B18%7D%20%5Clesssim%20%5Cfrac%7BR%7D%7Br%7D%5Clesssim%20%5Cfrac%7B%5Cpi%7D%7B2%7D%5Cfrac%7B1%7D%7B9%7D%20%5Capprox%20%5Cfrac%7B1%7D%7B5.7%7D"> or <img src="https://latex.codecogs.com/png.latex?5.7%20%5Clesssim%20%5Cfrac%7Br%7D%7BR%7D%5Clesssim%2011.4."></p></li>
<li><p>Density of the Gas Giant</p>
<p>The density of gas giants in solar system ranges from <img src="https://latex.codecogs.com/png.latex?687"> to <img src="https://latex.codecogs.com/png.latex?1640"> <img src="https://latex.codecogs.com/png.latex?kg/m%5E3">. Using them as our reference, we have</p>
<p><img src="https://latex.codecogs.com/png.latex?0.41%20%5Ctext%7B%20h%7D%20%5Clt%20%5Csqrt%7B%5Cfrac%7B3%7D%7B4%5Cpi%20G%20%5Crho%7D%7D%20%5Clt%200.634%20%5Ctext%7B%20h%7D"></p></li>
</ul>
<p>Plugging in our estimations for the density <img src="https://latex.codecogs.com/png.latex?%5Crho"> and <img src="https://latex.codecogs.com/png.latex?R/r">, we then have the orbital period of Pandora around the gas giant: <img src="https://latex.codecogs.com/png.latex?%2019%20%5Ctext%7B%20h%7D%5Clesssim%20T=2%5Cpi%20%5Csqrt%7B%5Cfrac%7Br%5E3%7D%7BR%5E3%7D%7D%5Csqrt%7B%5Cfrac%7B3%7D%7B4%5Cpi%20G%20%5Crho%7D%7D%20%5Clesssim%20153%20%5Ctext%7B%20h%7D"></p>
</section>
<section id="eclipse-duration" class="level1">
<h1>Eclipse Duration</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2022/eclipse.svg" class="img-fluid figure-img" style="width:60.0%"></p>
</figure>
</div>
<p>With the simplest assumption that Pandora’s orbit plane lines up with the gas giant’s orbit plane around its sun, Pandora will pass through the whole diameter of the gas giant’s shadow. We can also assume that the shadow size is almost the same as the size of the gas giant itself (some reasoning and justification about this are given in the Appendix). That means the eclipse duration is the amount of time Pandora spends traveling through the part of the orbit that’s covered in the shadow, the distance of which we approximate as <img src="https://latex.codecogs.com/png.latex?2R">: <img src="https://latex.codecogs.com/png.latex?t_%7Beclipse%7D%20=%20%5Cfrac%7Bl%7D%7B2%5Cpi%20r%7D%20T%20%5Capprox%20%5Cfrac%7B2R%7D%7B2%5Cpi%20r%7D%20T%20=%202%20%5Csqrt%7B%5Cfrac%7Br%7D%7BR%7D%7D%5Csqrt%7B%5Cfrac%7B3%7D%7B4%5Cpi%20G%20%5Crho%7D%7D"></p>
<p>Plugging in the ranges of values for density and <img src="https://latex.codecogs.com/png.latex?R/r">, we get <img src="https://latex.codecogs.com/png.latex?1.6%20%5Ctext%7B%20h%7D%20%5Clesssim%20t_%7Beclipse%7D%20%5Clesssim%204.3%20%5Ctext%7B%20h%7D"></p>
<p>This seems a reasonable amount of time for the actions that happened during the eclipse in the movie.</p>
</section>
<section id="information-on-astronomy-of-pandora" class="level1">
<h1>Information on Astronomy of Pandora</h1>
<p>I later searched online about the world building of Pandora, and found that there’s actually a good amount of information about the astronomy of the system. For example, the <a href="https://james-camerons-avatar.fandom.com/wiki/Alpha_Centauri_System">Alpha_Centauri_System</a>, the <a href="https://james-camerons-avatar.fandom.com/wiki/Pandora#Day-Night_Cycle">Day-Night Cycle</a> of Pandora, and some information about the gas giant <a href="https://james-camerons-avatar.fandom.com/wiki/Polyphemus">Polyphemus</a> where it’s mentioned that the gas giant is “slightly smaller and denser than Jupiter”.</p>
<p>With that information, we can change our lower estimate of the gas giant’s density to <img src="https://latex.codecogs.com/png.latex?%5Crho=1330%20kg/m%5E3">, which updates the upper limit of the orbital period to <img src="https://latex.codecogs.com/png.latex?T%20%5Clesssim%20110%20%5Ctext%7B%20h%7D"> and the upper limit for eclipse time to <img src="https://latex.codecogs.com/png.latex?t_%7Beclipse%7D%20%5Clesssim%203%20%5Ctext%7B%20h%7D"></p>
</section>
<section id="rotation-of-pandora" class="level1">
<h1>Rotation of Pandora</h1>
<p>If Pandora is like the moons of Jupiter, than it will be tidal-locked, and rotates synchronously, with the day equals the period of its orbit around the gas giant. From our estimation of the period <img src="https://latex.codecogs.com/png.latex?T">, we have the day on Pandora is between <strong>19</strong> and <strong>110</strong> hours. The lower end of this estimation is probably more realistic.</p>
</section>
<section id="appendix" class="level1">
<h1>Appendix</h1>
<section id="shadow-size-of-the-gas-giant" class="level2">
<h2 class="anchored" data-anchor-id="shadow-size-of-the-gas-giant">Shadow Size of the Gas Giant</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2022/shadow_length.svg" class="img-fluid figure-img"></p>
</figure>
</div>
<p>If the sun for the gas giant and Pandora have a similar apparent size in the sky as our sun, then the ratio of its radius <img src="https://latex.codecogs.com/png.latex?R_s"> to its distance <img src="https://latex.codecogs.com/png.latex?D"> is about: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BR_s%7D%7BD%7D%5Capprox%5Ctan(0.53%5E%7B%5Ccirc%7D)%20%5Capprox%20%5Cfrac%7B1%7D%7B100%7D"></p>
<p>With similar triangles, we have <img src="https://latex.codecogs.com/png.latex?d%20=%20%5Cfrac%7BDR%7D%7BR_s-R%7D%20%5Capprox%20%5Cfrac%7B100R_sR%7D%7BR_s-R%7D"></p>
<p>We now do an order-of-magnitude estimation. Assuming that the sun is at least about 10 times bigger than the gas giant (you can get to this conclusion by looking up the size of Jupiter, our sun, Alpha Centauri A and use the fact that the gas giant here is smaller than Jupiter), we have <img src="https://latex.codecogs.com/png.latex?R_s/(R_s-R)%5Capprox%201"> and <img src="https://latex.codecogs.com/png.latex?d%20%5Capprox%20100R%20"></p>
<p>Using similar triangles again, we have the shadow radius <img src="https://latex.codecogs.com/png.latex?R_%7Bshadow%7D%20=%20(d-r)R/d%20"></p>
<p>We’ve estimated that Pandora’s orbit radius around the gas giant <img src="https://latex.codecogs.com/png.latex?r%20%5Clesssim%2011.4%20R">, an order of magnitude less than <img src="https://latex.codecogs.com/png.latex?d">, so the shadow radius <img src="https://latex.codecogs.com/png.latex?R_%7Bshadow%7D%20%5Capprox%20R"></p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>
</section>

 ]]></description>
  <category>Physics</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2022-12-23-Eclipse_on_pandora_and_orbital_physics.html</guid>
  <pubDate>Fri, 23 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/2022/pandora_night.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tips for Configuring a Quarto Website</title>
  <dc:creator>ziyue li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2022-11-24-tips_for_configuring_a_quarto_website.html</link>
  <description><![CDATA[ 




<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2022/quarto-website.png" class="img-fluid"></p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Explore the GitHub Repo for this website to see how it’s set up: <a href="https://github.com/feynlee/curiosity-notes"><img src="https://feynlee.github.io/curiosity-notes/images/icons/github-logo.png" class="img-fluid" data-fig-align="left" width="80"></a></p>
</div>
</div>
<p>It took me some time to migrate to <a href="https://quarto.org">Quarto</a>. Here are some the tips that might be helpful if you are thinking about doing the same.</p>
<section id="different-sidebars-for-different-contents" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="different-sidebars-for-different-contents"><span class="header-section-number">1</span> Different Sidebars for Different Contents</h2>
<p>On this website, you will see multiple sections: Posts, TIL, Books … Many of them have their own sidebars. For example, see one of the posts in <a href="https://feynlee.github.io/curiosity-notes/TIL/2022/2022-11-23-aws-private_subnet_setup.html">TIL</a>. On the left-hand side is the sidebar to jump to other posts quickly.</p>
<!-- ![](images/2022/sidebars.png){width=50%, fig-align=center} -->
<p>This is easy to set up by simply having multiple sidebars in <code>_quarto.yml</code>. However, there seems to be a bug when you only have one sidebar configured. That one sidebar will show up across your website, even for pages unrelated to that sidebar.</p>
<p>As of this writing, an easy way to solve this is to make another empty sidebar:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource yml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> til</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> TIL</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">section</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022'</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Nbdev_ignore</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> TIL/2022/2022-11-23-aws-private_subnet_setup.ipynb</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Whisper2Subtitles</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> TIL/2022/2022-11-16-fastai-store_attr_infinite_recursion.ipynb</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> DreamBooth</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> TIL/2022/2022-11-15-fastai-show_training_loop.ipynb</span></span>
<span id="cb1-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> empty sidebar</span></span></code></pre></div>
</section>
<section id="enable-line-numbers-in-code-blocks" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="enable-line-numbers-in-code-blocks"><span class="header-section-number">2</span> Enable Line Numbers in Code Blocks</h2>
<p>Some useful settings for code blocks in <code>_quarto.yml</code>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource yml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">code-line-numbers</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">code-block-bg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">code-block-border-left</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">code-copy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">code-fold</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span></code></pre></div>
</section>
<section id="add-a-comment-section-that-supports-latex" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="add-a-comment-section-that-supports-latex"><span class="header-section-number">3</span> Add A Comment Section that Supports Latex</h2>
<!-- ![](images/2022/giscus.png){width=50%, fig-align=center} -->
<p><a href="https://giscus.app">Giscus</a> is a comments system powered by <a href="https://docs.github.com/en/discussions">GitHub Discussions</a>. It supports Latex, so that visitors can type math equations in the comment section.</p>
<p>Make sure you configure the <code>repository</code> and the <code>Discussion Category</code> on <a href="https://giscus.app">Giscus</a>. This will generate the script code. We don’t need to copy that code, but we do need to note the <code>data-repo-id</code>, and <code>data-category-id</code>.</p>
<p>To enable it for a page, include the following in the YAML front matter:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource yml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comments</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">giscus</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;GitHub Repo for Your Quarto Website&gt;</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo-id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;Your data-repo-id&gt;</span></span>
<span id="cb3-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">category</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;The Discussion Category&gt;</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">category-id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;Your data-category-id&gt;</span></span>
<span id="cb3-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mapping</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactions-enabled</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loading</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> lazy</span></span>
<span id="cb3-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">input-position</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span></span>
<span id="cb3-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preferred_color_scheme"</span></span></code></pre></div>
</section>
<section id="add-rss-feed" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="add-rss-feed"><span class="header-section-number">4</span> Add RSS Feed</h2>
<!-- ![rss](images/2022/rss.png){width=50%, fig-align=center} -->
<ol type="1">
<li><p>Add <code>feed: true</code> in the listing page Include a feed for your listing by including the <code>feed</code> option in your listing page:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource yml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> posts</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">feed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>An RSS file will automatically be generated using the name of the the file in the same location as the listing page. For example, <code>index.qmd</code> will produce a feed at <code>index.xml</code>.</p></li>
<li><p>Include the path to the xml file</p>
<p>We need to explicitly include links to these xml files. On this website, I created 3 RSS feeds: Posts, TIL and Projects. I included them in <code>_quarto.yml</code> under a menu on the right side of the navigation bar:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource yml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rss</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">menu</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Subscribe to Posts</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rss</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://feynlee.github.io/curiosity-notes/index.xml</span></span>
<span id="cb5-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aria-label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Posts RSS</span></span>
<span id="cb5-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Subscribe to TIL</span></span>
<span id="cb5-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rss</span></span>
<span id="cb5-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://feynlee.github.io/curiosity-notes/TIL.xml</span></span>
<span id="cb5-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aria-label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> TIL RSS</span></span>
<span id="cb5-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Subscribe to Projects</span></span>
<span id="cb5-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rss</span></span>
<span id="cb5-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://feynlee.github.io/curiosity-notes/projects.xml</span></span>
<span id="cb5-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aria-label</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Projects RSS</span></span></code></pre></div></li>
</ol>
</section>
<section id="add-social-share-buttons" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="add-social-share-buttons"><span class="header-section-number">5</span> Add Social Share Buttons</h2>
<!-- ![rss](images/2022/sharebuttons.png){width=50%, fig-align=center} -->
<p>There’s already an option to add social share buttons through the Quarto extension <a href="https://github.com/schochastics/quarto-social-share">quarto-social-share</a>. However, I’d like to use <a href="https://sharethis.com">sharethis</a>, and I want to make them appear above the comment section, immediately after each post.</p>
<p>After you configured the share buttons on <a href="https://sharethis.com">sharethis</a>, it will generate a header code and buttons code.</p>
<section id="header-code" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="header-code"><span class="header-section-number">5.1</span> Header Code</h3>
<p>For the header code, we can include it in the header of the website, by adding the following in <code>_quarto.yml</code>:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource yml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">header-includes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;script type="text/javascript" src="https://platform-api.sharethis.com/js/sharethis.js</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#property=**************&amp;product=inline-share-buttons&amp;source=platform" async="async"&gt;&lt;/script&gt;</span></span></code></pre></div>
</section>
<section id="buttons-code" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="buttons-code"><span class="header-section-number">5.2</span> Buttons Code</h3>
<p>For the buttons code, one could’ve included it at the bottom of each post manually, so that the share buttons appear there. However, I’d like to do this more efficiently, so I created an extension: <a href="https://github.com/feynlee/code-insertion">code-insertion</a>, which can insert any markdown/html code before and/or after a post.</p>
<p>Here’s what you need to do to enable this:</p>
<ul>
<li><p>Install Extension</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource sh number-lines code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> add feynlee/code-insertion</span></code></pre></div>
<p>This will install the extension under the <code>_extensions</code> subdirectory. If you’re using version control, you will want to check in this directory for your Quarto website.</p></li>
<li><p>Create a Markdown file to store the buttons code</p>
<p>Create a markdown file (html also works) <code>_sharebuttons.md</code>:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource md number-lines code-with-copy"><code class="sourceCode markdown"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;div</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">class</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sharethis-inline-share-buttons pt-5"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/div&gt;</span></span></code></pre></div>
<p>The <code>pt-5</code> is a <a href="https://getbootstrap.com/docs/4.0/utilities/spacing/#examples">Bootstrap class</a> to make sure there’s enough space between the post and the share buttons.</p>
<p>Make sure to start the file name with an underscore, so that Quarto ignores it when generating htmls.</p></li>
<li><p>Enable the filter in <code>_metadata.yml</code> for all posts</p>
<p>In the YAML front matter of a post, enable the code-insertion filter, and add <code>insert-before-post</code> and/or <code>insert-after-post</code> parameters that point to a markdown file with sections you want to insert before and/or after the post.</p>
<p>Create a <code>_metadata.yml</code> file under the folder that contains all of your posts. Any settings here will be shared by all posts. Enable the <code>code-insertion</code> filter:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource yml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filters</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> code-insertion</span></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">insert-after-post</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> _sharebuttons.md</span></span></code></pre></div>
<p>Note that you should put the path to your <code>_sharebuttons.md</code> file for <code>insert-after-post</code>. This will insert that code as the last block in your post, which is above the comment section.</p></li>
</ul>
</section>
</section>
<section id="add-an-annotation-tool" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="add-an-annotation-tool"><span class="header-section-number">6</span> Add An Annotation Tool</h2>
<p>You can enable <a href="https://web.hypothes.is">hypothes</a> on your website so that visitors can highlight and annotate your posts.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource yml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comments</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hypothesis</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> clean</span></span></code></pre></div>
<p>This is enabled for my website. You can see the Hypothesis UI at the far right of the page. You can also drag cursor over texts to make your own highlights and annotations on this page.</p>
</section>
<section id="enable-anchor-sections" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="enable-anchor-sections"><span class="header-section-number">7</span> Enable Anchor Sections</h2>
<p>Hover over a section title to see an anchor link. An anchor link makes it possible to share and reference the exact position of the specified section. Enable/disable this behavior with:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource yml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anchor-sections</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>Anchor links are also automatically added to figures and tables that have a <a href="https://quarto.org/docs/authoring/cross-references.html">cross reference</a> defined.</p>
</section>
<section id="a-custom-listing-page" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="a-custom-listing-page"><span class="header-section-number">8</span> A Custom Listing Page</h2>
<p>The <a href="https://feynlee.github.io/curiosity-notes/books/books.html">Books</a> page on this website is created with a <a href="https://quarto.org/docs/websites/website-listings-custom.html">custom listings</a> page. With <a href="https://ejs.co">EJS Template</a>, one can create a very customized listings page to suit one’s needs.</p>
<p><a href="https://quarto.org/docs/websites/website-listings-custom.html#sorting-filtering-and-pagination">Sorting, filtering and pagination</a> can also be enabled for your listings page with very little effort.</p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>

 ]]></description>
  <category>Web</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2022-11-24-tips_for_configuring_a_quarto_website.html</guid>
  <pubDate>Thu, 24 Nov 2022 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/2022/quarto-website.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Everything You Need to Know About Hiking the Duck Pass Trail</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2022-07-02-Duck_Pass_Trail.html</link>
  <description><![CDATA[ 




<p align="center">
<iframe width="560" height="315" src="https://www.youtube.com/embed/-ot_spOmSYw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</p>
<p align="center">
<iframe src="https://www.google.com/maps/d/u/2/embed?mid=1M6l2ixFe1cscCMejtJgwl2OIu28fRg8&amp;ehbc=2E312F" width="560" height="480">
</iframe>
</p>
<section id="stats" class="level1">
<h1>Stats</h1>
<p><em>(The following stats are based my person experience for your reference.)</em></p>
<p><strong>When</strong>: July 2, 2022 (Saturday)</p>
<p><strong>Completion Time</strong>: 6.5 hrs (8:30 am ~ 3 pm)</p>
<p><strong>Parking</strong>: There was still a decent amount of parking spots at 8:20 am when I arrived. If you intend to return through the Emerald Lake Trail, you can also park at the nearby parking lot by the Emerald Lake Trailhead.</p>
<p><strong>Fee</strong>: This trail is free for day-hike. However, you need a backcountry permit if you plan on staying overnight.</p>
<p><strong>Restrooms</strong>: There are restrooms at the trailhead parking lot but not on the trail.</p>
<p><strong>Distance</strong>: 9.5-mile R.T.</p>
<p><strong>Elevation</strong>: 9,128 feet to 10,800 feet</p>
<p><strong>Weather</strong>: Sunny day ( 61 F ~ 72 F for my hike ). It was a bit chilly in the morning when I started at 8:30 am, but it quickly warmed up. Plus the strenuous climb, I don’t think a jacket is needed at this time of year from my personal experience. It even got a bit hot near noon when I was under constant sunlight climbing to Duck Lake.</p>
</section>
<section id="things-to-pack" class="level1">
<h1>Things to Pack</h1>
<ul>
<li><p>3 liters of water</p>
<p>I actually packed two 2 gallons of water, and quickly regretted it due to the heavy weight. So I poured out 1 gallon, and didn’t even finish the other gallon by the end of the hike, despite constant hydration. 3 liters of water would’ve been enough for me.</p></li>
<li><p>Battery Pack</p>
<p>If you plan to take lots of photos and videos (you should), you will definitely need a battery pack to recharge your phone.</p></li>
<li><p>Sunglasses</p></li>
<li><p>Lunch</p>
<p>I packed some energy bars and some beef jerky. You can find some great spots at Duck Lake to enjoy your lunch before heading back.</p></li>
<li><p>Sunscreen</p>
<p>You will need this. Don’t forget to reapply every 2~3 hours.</p></li>
<li><p>Download the offline google map for this area!</p>
<p>You won’t have any cellphone signals during the hike. Having a map on your phone with your GPS on would help you know how far along you are in the hike.</p></li>
</ul>
<p><strong>Things I didn’t pack but could be helpful</strong></p>
<ul>
<li><p><em>Mosquito Repellent</em></p>
<p>I didn’t pack this, and was a bit regretting it. There were lots of mosquitos especially near the lakes. You may not want to add that to the weight. In that case, I would say at least remember to apply some mosquito repellent before heading out.</p></li>
<li><p><em>Hiking sticks</em></p>
<p>I didn’t use hiking sticks, but I can see how that would be of great help to people, especially on the strenuous climb to the Duck Lake, and if you are heading back through the Emerald Lake Trail, which is very steep.</p></li>
</ul>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>

 ]]></description>
  <category>Travel</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2022-07-02-Duck_Pass_Trail.html</guid>
  <pubDate>Sat, 02 Jul 2022 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/2022/duck_lake-3.JPG" medium="image"/>
</item>
<item>
  <title>Understanding Fastai’s DataBlock API</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2021-08-19-data-block-api-in-fastai.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p><a href="https://docs.fast.ai">Fastai</a>’s <code>DataBlock API</code> is a flexible and easy way to get and transform your data into something ready to be fed to a model. The <a href="https://docs.fast.ai/data.block.html#DataBlock">documentation</a> and <a href="https://docs.fast.ai/tutorial.datablock.html">tutorial</a> give some good examples of how to use this API. However, I still find it unclear how each argument in <code>Datablock</code> influences the different steps in the data transformation process.</p>
<p>In this post, I will try to visualize the data transformation process and explain the different steps the DataBlock API can hook into. Hopefully, this will make it easier for people to customize this process using this API.</p>
</section>
<section id="datablock-api-as-a-blueprint-for-data-transformation" class="level2">
<h2 class="anchored" data-anchor-id="datablock-api-as-a-blueprint-for-data-transformation">DataBlock API as A Blueprint for Data Transformation</h2>
<p>The data transformation process constructed by Fastai is depicted as follows, where the colored steps can be configured through the DataBlock API:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2021/DataBlock_API_Workflow-Fastai.svg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">How different parts of DataBlock API fit in the data loading process.</figcaption>
</figure>
</div>
<ol type="1">
<li><p><strong>get_item</strong>: This is the first optional function that takes the source as input, and returns items to be processed by the <code>Datasets</code> object in Fastai. If it’s not specified, the source will be passed directly to <code>Datasets</code>.</p></li>
<li><p><strong>splitter</strong>: The splitter is a function that returns two lists of indices, one for the training data set and one for the validation data set so that <code>Datasets</code> and <code>Dataloaders</code> know how to split the data into train/valid.</p></li>
<li><p><strong>getters</strong> (or <strong>get_x</strong>, <strong>get_y</strong>): getters are a list of functions that is applied to each item passed to them to generate corresponding x and y. You can also specify <strong>get_x</strong> and/or <strong>get_y</strong> specifically. They will overwerite <strong>getters</strong> as <code>get_x + get_y</code>. Note, the number of functions in <strong>get_x</strong> and <strong>get_y</strong> should be consistent with the number of x and y specified in <strong>blocks</strong> and <strong>n_inp</strong> (see below).</p></li>
<li><p><strong>type_tfms</strong>: These are collected from your <code>TranformBlock</code>s you specified in <strong>blocks</strong> (explained below). They will transform your x and y respectively, according to the blocks you used for x and y.</p></li>
<li><p><strong>item_tfms</strong>: A list of <code>Transform</code>s to be combined with the <strong>item_tfms</strong> in your <code>TransformBlock</code>s for x and y, respectively. These are applied to each item in the <code>Dataloaders</code> object before batches are created. For example, we can resize each image to the same size at this step.</p></li>
<li><p><strong>batch_tfms</strong>: A list of <code>Transform</code>s to be combined with the <strong>batch_tfms</strong> in your <code>TransformBlock</code>s for x and y specified in <strong>blocks</strong>. These are applied after a batch is created.</p></li>
</ol>
<p>(Note that the <code>Transform</code>s need to be different based on what type of object it’s applied on, whether it’s the training or validation set. This is achieved through type dispatch and the <code>split_idx</code> variable in <code>Transform</code> respectively. Please see the next section <strong>Deeper Dive</strong> for more details.)</p>
<p>An example usage of the <code>DataBlock</code> API:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">dblock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataBlock(</span>
<span id="cb1-2">    blocks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(ImageBlock, BBoxBlock, BBoxLblBlock), </span>
<span id="cb1-3">    n_inp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb1-4">    get_items<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>get_image_files,</span>
<span id="cb1-5">    splitter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>RandomSplitter(),</span>
<span id="cb1-6">    getters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, </span>
<span id="cb1-7">    get_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb1-8">    get_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> o: img2bbox[o.name][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> o: img2bbox[o.name][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]], </span>
<span id="cb1-9">    item_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>),</span>
<span id="cb1-10">    batch_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>aug_transforms()</span>
<span id="cb1-11">)</span>
<span id="cb1-12"></span>
<span id="cb1-13">dls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dblock.dataloaders(path_to_image_folder)</span></code></pre></div>
<ol start="7" type="1">
<li><p><strong>blocks</strong>: These can be <code>TransformBlock</code> objects that simultaneously specify the types of your x and y, and their associated <strong>type_tfms</strong>, <strong>item_tfms</strong> and <strong>batch_tfms</strong> to be inserted in the data transformation process for each type. The objects here do not HAVE TO be <code>TransformBlock</code> though. If they are not, they do not contribute any <strong>type_tfms</strong>, <strong>item_tfms</strong> and <strong>batch_tfms</strong> to the data transformation process.</p>
<p>A <code>TransformBlock</code> is simply defined as:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> TransformBlock():</span>
<span id="cb2-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"A basic wrapper that links defaults transforms for the data block API"</span></span>
<span id="cb2-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, type_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, item_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, batch_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, dl_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, dls_kwargs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb2-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.type_tfms  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>            L(type_tfms)</span>
<span id="cb2-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.item_tfms  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ToTensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> L(item_tfms)</span>
<span id="cb2-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.batch_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>            L(batch_tfms)</span>
<span id="cb2-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dl_type,<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dls_kwargs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dl_type,({} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> dls_kwargs <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> dls_kwargs)</span></code></pre></div></li>
<li><p><strong>n_inp</strong>: This specifies the number of inputs (x) so that the API knows the first n_inp <code>TransformBlock</code> are for x and the rest for y. In this case, we have one x and two ys. The model will need to predict for both the bounding box and the label.</p></li>
<li><p><strong>item_tfms</strong>, <strong>batch_ftms</strong>: additional <code>Transform</code>s to be combined with those specified in the <code>TransformBlocks</code> in <strong>blocks</strong>.</p></li>
<li><p><strong>get_items</strong>, <strong>splitter</strong>, <strong>getters</strong>, <strong>get_x</strong>, <strong>get_y</strong> have one-to-one correspondance to those explained in the blueprint.</p></li>
</ol>
<p>Now, we can do a quick walkthrough of the example <code>dblock</code>:</p>
<ol type="1">
<li><p><code>path_to_image_folder</code> is fed into <code>get_image_files</code> to generate a list of paths to all images.</p></li>
<li><p><code>RandomSplitter()</code> takes this list of paths and generates randomized lists of indices for train and valid data sets. These indices will be held in <code>Datasets</code> and <code>Dataloaders</code> to generate the final train/valid data.</p></li>
<li><p>Because <strong>get_x</strong> is not specified, these paths are passed through directly as our x at this point.</p></li>
<li><p>The same list of paths is passed to <strong>get_y</strong> which has two functions, one looking up the file name to find its corresponding bounding box data and the other the corresponding label. Because <strong>n_inp=1</strong>, we get two ys.</p></li>
<li><p>The list of paths in x is passed through <strong>type_tfms</strong> specified in <code>ImageBlock</code> to open the images. <strong>type_tfms</strong> in <code>BBloxBlock</code> and <code>BBoxLablBlock</code> are applied to the bounding box and label data respectively.</p></li>
<li><p>The <strong>item_tfms</strong> is appended to any <strong>item_tfms</strong> specified in <code>ImageBlock</code>, <code>BBloxBlock</code>, <code>BBoxLablBlock</code> respectively and then applied to our x and y to resize the images and the bounding box while leaving the label unchanged. (Again, a <code>Transform</code> object can specify different transformations to be applied to different object types.)</p></li>
<li><p>Finally, after a batch is created we apply <code>aug_transforms()</code> to generate a list of fliped, rotated, zoomed, warped, lighting-adjusted images as augmentations of our data for training.</p></li>
</ol>
</section>
<section id="deeper-dive" class="level2">
<h2 class="anchored" data-anchor-id="deeper-dive">Deeper Dive</h2>
<section id="transform-and-pipeline" class="level3">
<h3 class="anchored" data-anchor-id="transform-and-pipeline">Transform and Pipeline</h3>
<p>The <code>Transform</code> object can have multiple <code>encodes</code>/<code>decodes</code> methods defined for different argument types. The appropriate <code>encodes</code>/<code>decodes</code> method will be chosen based on the first argument’s type. This is achieved through type dispatch. For this more advanced topic, please watch Jeremy Howard’s code walk-through video on how the Transform class is built:</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/GcMGchBJeXk" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>You can find many examples in the <a href="https://fastcore.fast.ai/transform.html#Transform">Transform documentation</a>. Here I only give the most basic demostrations of <code>Transform</code>:</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Times2(Transform):</span>
<span id="cb3-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> encodes(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb3-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-4">    </span>
<span id="cb3-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> decodes(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb3-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@Transform</span></span>
<span id="cb3-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> plus3(x:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>): <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb3-10"></span>
<span id="cb3-11">times2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Times2()</span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tests</span></span>
<span id="cb3-13">test_eq(times2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-14">test_eq(plus3(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb3-15">test_eq(plus3(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<p>As can be seen, the <em>plus3</em> function is only applied to integer types.</p>
<p>A <code>Pipeline</code> simply applies a list of Transforms to an item. You can optionally specify <code>split_idx</code> to turn on only transforms with the same <code>split_idx</code>. Please see the <a href="https://fastcore.fast.ai/transform.html#Pipeline">Pipeline doc</a> for more details.</p>
<div class="cell" data-execution_count="83">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pipeline([times2,plus3])</span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tests</span></span>
<span id="cb4-3">test_eq(p(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb4-4">test_eq(p(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
</section>
<section id="tfmdlists-and-datasets" class="level3">
<h3 class="anchored" data-anchor-id="tfmdlists-and-datasets">TfmdLists and Datasets</h3>
<p><code>TfmdLists</code> applies a list of Transforms or a Pipeline to <strong><em>a list of items</em></strong>, with the option to split the list into training data set vs.&nbsp;validation data set by specifying <code>splits</code> as lists of indices:</p>
<div class="cell" data-execution_count="84">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TfmdLists([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], p, splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb5-2">tf.train[:]</span>
<span id="cb5-3">tf.valid[:]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="84">
<pre><code>(#1) [5]</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="84">
<pre><code>(#2) [7,13]</code></pre>
</div>
</div>
<p><code>Datasets</code> further expands the functionality so that you can specifiy <strong><em>multiple</em></strong> Pipelines or lists of Transforms to <strong><em>a list of items</em></strong>, returning a list of tuples with each item in the tuple corresponding to the result of one Pipeline.</p>
<div class="cell" data-execution_count="80">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">ds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Datasets([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>], [p, [plus3]], splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]])</span>
<span id="cb8-2">ds.train</span>
<span id="cb8-3">ds.valid</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="80">
<pre><code>(#4) [(5, 4),(7, 5),(13, 8),(-15, -6)]</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="80">
<pre><code>(#2) [(25, 14),(33, 18)]</code></pre>
</div>
</div>
<p>From <code>Datasets</code>, we can then get the dataloaders:</p>
<div class="cell" data-execution_count="81">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1">dls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ds.dataloaders(bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb11-2">dls.one_batch()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="81">
<pre><code>(tensor([5, 7]), tensor([4, 5]))</code></pre>
</div>
</div>
<p>The same could be achieve by using the DataBlock API directly:</p>
<div class="cell" data-execution_count="85">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb13-1">dblock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataBlock(blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (TransformBlock(type_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[times2, plus3]), </span>
<span id="cb13-2">                             TransformBlock(type_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[plus3])),</span>
<span id="cb13-3">                   splitter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]]</span>
<span id="cb13-4">                  )</span>
<span id="cb13-5"></span>
<span id="cb13-6">dls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dblock.dataloaders([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>], bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb13-7">dls.one_batch()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="85">
<pre><code>(tensor([5, 7]), tensor([4, 5]))</code></pre>
</div>
</div>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>
</section>

 ]]></description>
  <category>Data Science</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2021-08-19-data-block-api-in-fastai.html</guid>
  <pubDate>Sat, 28 Aug 2021 19:10:53 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/2021/DataBlock_API_Workflow-Fastai.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>What is Temperature</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2020-11-26-what_is_temporature.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/https:/upload.wikimedia.org/wikipedia/commons/7/70/Thermometer_CF.svg" class="img-fluid figure-img" style="width:40.0%"></p>
</figure>
</div>
<p>The concept of temperature has always been confusing to me. On the one hand, we have statistical mechanics that defines the temperature by <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7BT%7D%20=%20%5Cleft.%5Cfrac%7B%5Cpartial%20S%7D%7B%5Cpartial%20E%7D%20%5Cright%7C_%7BV,N%7D"> (or <img src="https://latex.codecogs.com/png.latex?T%20=%20%5Cleft.%5Cfrac%7B%5Cpartial%20E%7D%7B%5Cpartial%20S%7D%20%5Cright%7C_%7BV,N%7D">). On the other hand, we have our everyday experience of temperature scales. We obviously don’t measure the entropy of everything and do the partial derivative with respect to their energy to get their temperature. Instead we mark the temperature directly from a thermometer. How are they connected? How is that abstract temperature formula related to how we measure temperature in our everyday life?</p>
<p>What on earth is temperature?</p>
<div class="article-in-brief">
<div class="hr-titles article-in-brief__title">
<p><span class="in-brief">In Brief</span></p>
</div>
<div class="article-in-brief__content">
<li>
<b>From statistical mechanics</b>, we obtain a quantity that becomes equal when systems reach thermal equilibrium.
</li>
<li>
<b>Historically</b>, the temperature scale was defined empirically to be proportional to the volume of approximate ideal gas.
</li>
<li>
<b>By connecting the ideal gas equation derived from statistical mechanics to the one obtained empirically</b>, we can fix the temperature definition in statistical mechanics.
</li>
<li>
<b>We then switch to adopt the temperature definition from statistical mechanics instead</b>, which was fixed to be roughly consistent with the historical temperature scale.
</li>
<li>
<b>This modern definition of temperature gives the most general meaning of temperature</b>. All thermometers including the ones we use every day, in theory, should be calibrated by model systems that are calculable from statistical mechanics according to this new definition of temperature.
</li>
</div>
</div>
</section>
<section id="temperature-from-statistical-mechanics" class="level2">
<h2 class="anchored" data-anchor-id="temperature-from-statistical-mechanics">Temperature from Statistical Mechanics</h2>
<section id="microstates-and-the-principle-of-equal-a-priori-probabilities" class="level3">
<h3 class="anchored" data-anchor-id="microstates-and-the-principle-of-equal-a-priori-probabilities">Microstates and the principle of equal a priori probabilities</h3>
<p>To understand temperature from statistical mechanics, we need the concepts of macro-state and micro-state. A system in thermodynamic equilibrium is said to be in a macrostate, whose characteristics such as energy, volume, pressure, and temperature are stable and can be directly measured. A macrostate is composed of many <a href="https://en.wikipedia.org/wiki/Microstate_(statistical_mechanics)">microstates</a> which describe the detailed states of all particles in the system and are constantly transitioning into each other.</p>
<p>The analysis of statistical mechanics starts from the assumption that a system that has reached equilibrium is equally likely to be found in any of its accessible microstates. We call this the “principle of equal apriori probabilities”, the justification (not a complete proof) for which can be found <a href="http://farside.ph.utexas.edu/teaching/sm1/lectures/node26.html">here using the H theorem</a>. For now, we take it as a given and know that statistical mechanics built on this assumption has worked remarkably well.</p>
</section>
<section id="the-most-likely-macrostate-under-thermal-equilibrium" class="level3">
<h3 class="anchored" data-anchor-id="the-most-likely-macrostate-under-thermal-equilibrium">The most likely macrostate under thermal equilibrium</h3>
<p>Let’s imagine putting two systems <img src="https://latex.codecogs.com/png.latex?1"> and <img src="https://latex.codecogs.com/png.latex?2"> next to each other so that they can exchange energies. What the equal probability principle tells us is that when systems <img src="https://latex.codecogs.com/png.latex?1"> and <img src="https://latex.codecogs.com/png.latex?2"> reach equilibrium, the probability of what macroscopic states these two are in is proportional to the number of corresponding microscopic states there are for the combined system. Systems 1 and 2 are going to spend most of the time in macrostates that had lots of corresponding microstates.</p>
<p>Let’s denote the number of microstates for a macrostate of <img src="https://latex.codecogs.com/png.latex?N"> particles, with volume <img src="https://latex.codecogs.com/png.latex?V"> and internal energy <img src="https://latex.codecogs.com/png.latex?E"> as <img src="https://latex.codecogs.com/png.latex?%5COmega(N,%20V,%20E)">. Then the number of microstates when A and B are together is</p>
<p><img src="https://latex.codecogs.com/png.latex?%5COmega(N,%20V,%20E)%20=%20%5Csum_%7BE_1%7D%5COmega_%7B1%7D(N_1,%20V_1,%20E_1)%5COmega_%7B2%7D(N_2,%20V_2,%20E-E_1),%20"></p>
<p>summing over all possible values of <img src="https://latex.codecogs.com/png.latex?E_1%5Cle%20E">. In this case, there’s no exchange of particles and no change of volume, so <img src="https://latex.codecogs.com/png.latex?N_1">, <img src="https://latex.codecogs.com/png.latex?N_2">, <img src="https://latex.codecogs.com/png.latex?V_1"> and <img src="https://latex.codecogs.com/png.latex?V_2"> are all fixed. (For people that have studied Thermodynamics, you may recognize that we are using <a href="https://en.wikipedia.org/wiki/Microcanonical_ensemble">Microcanonical Ensembles</a> here.)</p>
<p>The probability of a macrostate where system <img src="https://latex.codecogs.com/png.latex?1"> has energy <img src="https://latex.codecogs.com/png.latex?E_1"> and system <img src="https://latex.codecogs.com/png.latex?2"> has energy <img src="https://latex.codecogs.com/png.latex?E-E_1"> is therefore</p>
<p><img src="https://latex.codecogs.com/png.latex?p(E_1)%20=%20%5COmega_%7B1%7D(N_1,%20V_1,%20E_1)%5COmega_%7B2%7D(N_2,%20V_2,%20E-E_1)/%5COmega(N,%20V,%20E)."></p>
<p>We will prove in Apendex I that the most likely macrostate dominates the probability distribution, and therefore the equilibrium states are very well represented by the energy distribution with the maximum probability.</p>
<p>Let’s take a look at this maximum probability state. When <img src="https://latex.codecogs.com/png.latex?p"> reaches the maximum, the the first order derivative vanishes:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cleft.%5Cfrac%7B%5Cpartial%20%5COmega_1%7D%7B%5Cpartial%20E_1%7D%5Cright%7C_%7BN_1,%20V_1%7D%20%5COmega_2%20dE_1%20+%20%5Cleft.%5Cfrac%7B%5Cpartial%20%5COmega_2%7D%7B%5Cpartial%20E_2%7D%5Cright%7C_%7BN_2,%20V_2%7D%20%5COmega_1%20dE_2%20=0"></p>
<p>Because <img src="https://latex.codecogs.com/png.latex?dE_2=-dE_1">, we obtain</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cleft.%5Cfrac%7B%5Cpartial%5Clog%20%5COmega_1%7D%7B%5Cpartial%20E_1%7D%5Cright%7C_%7BN_1,%20V_1%7D%20=%20%5Cleft.%5Cfrac%7B%5Cpartial%5Clog%20%5COmega_2%7D%7B%5Cpartial%20E_2%7D%5Cright%7C_%7BN_2,%20V_2%7D%20."></p>
<p>We conclude that when thermal equilibrium is reached, the quantity <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Cpartial%5Clog%20%5COmega%7D%7B%5Cpartial%20E%7D"> in systems 1 and 2 become equal. If this quantity in these two systems is not equal, then they haven’t reached equilibrium yet.</p>
<p>Obviously, this quantity is connected to our everyday concept of “temperature”. How is it connected to temperature? We don’t know yet. For now, we will just note that it’s a function of temperature <img src="https://latex.codecogs.com/png.latex?T">:</p>
<p><img src="https://latex.codecogs.com/png.latex?f(T)=%5Cleft.%5Cfrac%7B%5Cpartial%5Clog%20%5COmega%7D%7B%5Cpartial%20E%7D%20%5Cright%7C_%7BN,%20V%7D%20=%20%5Cleft.%5Cfrac%7B%5Cpartial%5Cbar%7BS%7D%7D%7B%5Cpartial%20E%7D%5Cright%7C_%7BN,%20V%7D,"></p>
<p>where for convenience, I introduced the notation for “entropy”</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbar%7BS%7D%5Cequiv%5Clog%20%5COmega."></p>
<p>(<em>For our purpose in this post, we don’t have to get too deep into the meaning of “entropy”. Here we will merely take it as a mathematical expression.</em>)</p>
<p>We see that that the partial derivative of entropy with respect to energy, when the number of particles and the volume are fixed, is a function of temperature. That’s all statistical mechanics can tell us. It leaves plenty of room for how one can define temperature. Even though not required for the following derivation, as an exercise, the reader can further determine that the function should decrease in value when temperature increases, using the fact that we are looking at a maximum here, where the second derivative is negative.</p>
<p>To connect this statistical mechanics concept of temperature to the concept of temperature used in our daily lives, we need to first take a detour and have a look at how the temperature was defined historically before thermodynamics.</p>
</section>
</section>
<section id="empirical-temperature-definition" class="level2">
<h2 class="anchored" data-anchor-id="empirical-temperature-definition">Empirical Temperature Definition</h2>
<p>It was discovered that different gases kept under very low constant pressure, when started at the same volume and the same temperature, expands to the same volume when the temperature changes (experimentally, we can make sure that temperatures are the same by putting the two gases in contact with the same heat reservoir). Temperature can therefore be taken as a quantity that increases linearly with the volume occupied by the gas: <img src="https://latex.codecogs.com/png.latex?T%5Cpropto%20V">.</p>
<p>{% include image.html file=“https://upload.wikimedia.org/wikipedia/commons/e/e4/Charles_and_Gay-Lussac%27s_Law_animated.gif” caption=” If we mark the temperature scales proportional to the volumes’ scales, we get a basic gas thermometer.” %}</p>
<p>People also discovered that when the volume is kept constant, the pressure increases linearly with the temperature: <img src="https://latex.codecogs.com/png.latex?P%20%5Cpropto%20T">; when the temperature is kept constant, the pressure is inversely proportional to the volume: <img src="https://latex.codecogs.com/png.latex?P%20%5Cpropto%201/V">; and the volume of gas is proportional to the amount of gas: <img src="https://latex.codecogs.com/png.latex?V%20%5Cpropto%20N">.</p>
<p>Combining all these observations, we get the combined gas law in a general form:</p>
<p><img src="https://latex.codecogs.com/png.latex?PV=kNT+c"></p>
<p>Note that <img src="https://latex.codecogs.com/png.latex?k"> and <img src="https://latex.codecogs.com/png.latex?c"> are up to how we define the temperature scale:</p>
<ul>
<li><p>We have the freedom to define the unit of temperature, i.e.&nbsp;how much one degree means. This affects the slope <img src="https://latex.codecogs.com/png.latex?k">.</p></li>
<li><p>We have the freedom to define the starting point of temperature, i.e.&nbsp;where temperature 0 lies. This affects the constant <img src="https://latex.codecogs.com/png.latex?c">.</p></li>
</ul>
<p>Historically, people have defined the temperature scale in such a way that the difference between the boiling point and the triple point of water at one atmosphere of pressure is equal to 100. This defines the “degree” and determines the Boltzmann constant <img src="https://latex.codecogs.com/png.latex?k=8.31%20J%E2%8B%85K%5E%7B%E2%88%921%7D%E2%8B%85mol%5E%7B%E2%88%921%7D">.</p>
<p>To remove the constant in the equation, so that when the temperature reaches 0, it corresponds to <img src="https://latex.codecogs.com/png.latex?P=0"> or <img src="https://latex.codecogs.com/png.latex?V=0">, the “absolute zero” temperature can be defined in the following way:</p>
<p>If the triple point of water under the pressure of 1 atmosphere is <img src="https://latex.codecogs.com/png.latex?T_1">, then the “zero temperature” <img src="https://latex.codecogs.com/png.latex?T_0"> can be obtained by <img src="https://latex.codecogs.com/png.latex?PV=kN(T_1-T_0)">, where <img src="https://latex.codecogs.com/png.latex?P"> and <img src="https://latex.codecogs.com/png.latex?V"> are the pressure and volume of an ideal gas at <img src="https://latex.codecogs.com/png.latex?T_1">. This gives us the temperature difference between the freezing point of water and the “absolute zero” in the “degree” units, which comes out to be around <img src="https://latex.codecogs.com/png.latex?273.16"> degrees. We then shift the temperature scales, so that the freezing point of water is at about <img src="https://latex.codecogs.com/png.latex?273.16"> degrees and the “absolute zero” is at <img src="https://latex.codecogs.com/png.latex?0"> degrees. This gives us the Kevin Temperature Scale.</p>
<p>With these two definitions, we’ve fixed our ideal gas equation:</p>
<p><img src="https://latex.codecogs.com/png.latex?PV%20=%20kNT"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?k=8.31%20J%E2%8B%85K%5E%7B%E2%88%921%7D%E2%8B%85mol%5E%7B%E2%88%921%7D">.</p>
<p>Next, we want to connect this empirically defined temperature back to our temperature concept from statistical mechanics.</p>
</section>
<section id="connecting-the-statistical-temperature-with-the-empirical-temperature" class="level2">
<h2 class="anchored" data-anchor-id="connecting-the-statistical-temperature-with-the-empirical-temperature">Connecting the Statistical Temperature with the Empirical Temperature</h2>
<section id="formula-for-pressure" class="level3">
<h3 class="anchored" data-anchor-id="formula-for-pressure">Formula for pressure</h3>
<p>To connect the two, we need to derive the ideal gas equation from statistical mechanics. And in order to do that, we need to know how pressure is connected to the concept of entropy.</p>
<p>From the previous section on statistical mechanics, we see that the change of entropy contributes to the change of energy: <img src="https://latex.codecogs.com/png.latex?dE%20=%20f(T)d%5Cbar%7BS%7D"> when <img src="https://latex.codecogs.com/png.latex?V"> and <img src="https://latex.codecogs.com/png.latex?N"> are fixed. This is the heat exchange discussed in that section. We also know that when volume changes, pressure does work and contributes to the energy of the system, if there’s no heat exchange: <img src="https://latex.codecogs.com/png.latex?dE=PdV">.</p>
<p>Combining them, we have</p>
<p><img src="https://latex.codecogs.com/png.latex?dE%20=%20PdV%20+%20f(T)d%5Cbar%7BS%7D."></p>
<p>Therefore, the pressure can be obtained through entropy in the following way</p>
<p><img src="https://latex.codecogs.com/png.latex?P%20=%20%5Cleft.%20f(T)%5Cfrac%7B%5Cpartial%20%5Cbar%7BS%7D%7D%7B%5Cpartial%20V%7D%20%5Cright%7C_%7BN,%20E%7D"></p>
</section>
<section id="determine-the-temperature-function" class="level3">
<h3 class="anchored" data-anchor-id="determine-the-temperature-function">Determine the temperature function</h3>
<p>I will skip the derivation, which can be found in other textbooks. The number of microstates for an ideal gas at a constant energy <img src="https://latex.codecogs.com/png.latex?E"> is <sup>1</sup></p>
<p><img src="https://latex.codecogs.com/png.latex?%5COmega(E)%20=%20V%5EN%20%5Cleft(%5Cfrac%7B3N%7D%7B2E%7D%5Cright)%5Cpi%5E%7B3N/2%7D(2mE)%5E%7B3N/2%7D/(3N/2)!"></p>
<p>Therefore</p>
<p><img src="https://latex.codecogs.com/png.latex?P=f(T)%5Cleft.%5Cfrac%7B%5Cpartial%20%5Cbar%7BS%7D%7D%7B%5Cpartial%20V%7D%20%5Cright%7C_%7BN,%20E%7D%20=%20f(T)%5Cfrac%7BN%7D%7BV%7D"></p>
<p>Comparing this to the ideal gas equation, we then have</p>
<p><img src="https://latex.codecogs.com/png.latex?f(T)%20=%20kT."></p>
<p>At this point, we can plug this back into the relationship between entropy and energy to obtain</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7BT%7D%20=%20%5Cleft.k%5Cfrac%7B%5Cpartial%5Cbar%7BS%7D%7D%7B%5Cpartial%20E%7D%5Cright%7C_%7BN,%20V%7D=%20%5Cleft.%5Cfrac%7B%5Cpartial%20S%7D%7B%5Cpartial%20E%7D%5Cright%7C_%7BN,%20V%7D,"></p>
<p>where we’ve also used the official definition of entropy which absorbs Boltzmann constant <img src="https://latex.codecogs.com/png.latex?k"></p>
<p><img src="https://latex.codecogs.com/png.latex?S=k%5Cbar%7BS%7D%20=%20k%5Clog%20%5COmega."></p>
<p>The statistical mechanics’ definition of temperature that matches up with our historical empirical definition of temperature is therefore</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7BT%7D%20=%20%5Cleft.%5Cfrac%7B%5Cpartial%20S%7D%7B%5Cpartial%20E%7D%5Cright%7C_%7BN,%20V%7D"></p>
<p>or</p>
<p><img src="https://latex.codecogs.com/png.latex?T%20=%20%5Cleft.%5Cfrac%7B%5Cpartial%20E%7D%7B%5Cpartial%20S%7D%5Cright%7C_%7BN,%20V%7D."></p>
</section>
</section>
<section id="temperature-scale" class="level2">
<h2 class="anchored" data-anchor-id="temperature-scale">Temperature Scale</h2>
<section id="problem-with-the-old-temperature-scale" class="level3">
<h3 class="anchored" data-anchor-id="problem-with-the-old-temperature-scale">Problem with the old temperature scale</h3>
<p>We obtained the statistical mechanics’ definition of temperature by connecting statistical mechanics equations to the empirical definition of temperature. This constrains the degree of freedom allowed by statistical mechanics and gives us a clear definition.</p>
<p>However, the constant <img src="https://latex.codecogs.com/png.latex?k"> now absorbed in the entropy <img src="https://latex.codecogs.com/png.latex?S"> comes from the definition of a degree, which has to be determined by experiments first.</p>
<p>Originally, a degree is defined by dividing the temperature differences between the boiling point and the triple point of water. This requires two experimental measurements at two temperatures. To simplify this a little, we can define the temperature scale as the temperature of the triple point of water divided by <img src="https://latex.codecogs.com/png.latex?273.16">.</p>
<p>This removes one of the measurements required since the absolute zero is theoretically simple from statistical mechanics, and fixes the temperature of the triple point to be exactly <img src="https://latex.codecogs.com/png.latex?T=273.16%20K">. We now only need to measure the <img src="https://latex.codecogs.com/png.latex?P">, <img src="https://latex.codecogs.com/png.latex?V"> and <img src="https://latex.codecogs.com/png.latex?N"> in order to figure out the value of <img src="https://latex.codecogs.com/png.latex?k">. If we are using gas, and it can be approximated as an ideal gas, then we can use the formula <img src="https://latex.codecogs.com/png.latex?PV=NkT"> to determine the value of <img src="https://latex.codecogs.com/png.latex?k">.</p>
<p>Other substances can be used for this measurement too. The general principle here is to use certain model systems that are sufficiently simple so that one can calculate its entropy as a function of the energy, <img src="https://latex.codecogs.com/png.latex?S=S(E)">, and derive the formula for its temperature. We then measure related quantities of the system to determine the value of <img src="https://latex.codecogs.com/png.latex?k">.</p>
<p>Notice that this requires a simple model system that’s calculable and a real system that’s close enough to the theoretical model system for precise measurements. This makes it very hard to determine the value of <img src="https://latex.codecogs.com/png.latex?k"> to high precision.</p>
<p>In fact, because of this approach, the Boltzmann constant <img src="https://latex.codecogs.com/png.latex?k"> was one of the least accurately known fundamental constants.</p>
</section>
<section id="re-define-the-temperature-scale" class="level3">
<h3 class="anchored" data-anchor-id="re-define-the-temperature-scale">Re-define the temperature scale</h3>
<p>In 2019, the definition of temperature scale has been revised to fix this problem. Instead, we fix the value of <img src="https://latex.codecogs.com/png.latex?k"> first and then use the temperature equation from statistical mechanics to define our temperature scale. This way, the Boltzmann constant can be defined exactly by other physical constants. For more details, please see <a href="https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units">redefinition of Boltzmann’s constant and its impacts on the definition of 1 Kevin</a>.</p>
</section>
<section id="the-most-general-meaning-of-temperature" class="level3">
<h3 class="anchored" data-anchor-id="the-most-general-meaning-of-temperature">The most general meaning of temperature</h3>
<p>Now that we switched to using statistical mechanics as the first principle for defining temperature scales, this means, the most general interpretation of temperature is that it’s the derivative of exchanged heat with respect to the entropy, i.e.&nbsp;the quantity that becomes equal under thermal equilibrium. Only in special situations, such as with the ideal gas, the temperature represents the average kinetic energy of atoms in the gas, because there the temperature is proportional to the average energy. But this is not always the case for other more complicated systems.</p>
</section>
<section id="thermometers" class="level3">
<h3 class="anchored" data-anchor-id="thermometers">Thermometers</h3>
<p>How is the temperature scale connected to the thermometers we use in our daily lives?</p>
<p>Because we now use the statistical mechanics’ definition of temperature as the official definition of temperature scales, in theory, all thermometers need to be calibrated to be consistent with the <img src="https://latex.codecogs.com/png.latex?T=%5Cleft.%5Cpartial%20E%20/%5Cpartial%20S%20%5Cright%7C_%7BN,%20V%7D"> formula. However, the entropies for most systems are too complicated to calculate.</p>
<p>Ideally, we should use model systems that are calculable as our primary thermometers. Ideal gas, black body radiation, and spin paramagnetism are the three most important model systems that can be used as primary thermometers <sup>2</sup>. In practice, we use systems that are very close to these ideal systems as our primary thermometers.</p>
<p>We then use these primary thermometers to calibrate secondary thermometers, which include most of the thermometers we use in our daily lives.</p>
</section>
</section>
<section id="appendix" class="level2">
<h2 class="anchored" data-anchor-id="appendix">Appendix</h2>
<section id="i.-why-do-we-only-focus-on-the-most-likely-scenario" class="level3">
<h3 class="anchored" data-anchor-id="i.-why-do-we-only-focus-on-the-most-likely-scenario">I. why do we only focus on the most likely scenario?</h3>
<p>One can prove that the entropy of a combined system equals the sum of its parts:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbar%7BS%7D%20=%20%5Clog%20%5COmega%20=%20%5Clog%20%5COmega_1%20%5COmega_2%20=%20%5Clog%20%5COmega_1%20+%20%5Clog%20%5COmega_2%20=%20%5Cbar%7BS%7D_1%20+%20%5Cbar%7BS%7D_2,"></p>
<p>Therefore, entropy is an extensive quantity, proportional to the size of the system: <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BS%7D%20%5Cpropto%20N">, just as <img src="https://latex.codecogs.com/png.latex?U%20%5Cpropto%20N">.</p>
<p>Now we can use this to prove that the probability drops dramatically when the energy distribution between systems 1 and 2 differ slightly from the most likely energy distribution.</p>
<p>We Talyor expand the numerator in probability <img src="https://latex.codecogs.com/png.latex?p"> around the maximum <img src="https://latex.codecogs.com/png.latex?U_1=U_1%5E%7B*%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5COmega_1(U_1)%5COmega_2(U-U_1)&amp;=%5Cexp(%5Cbar%7BS%7D_1(U_1)%20+%20%5Cbar%7BS%7D_2(U-U_1))%20%5C%5C%0A&amp;%5Capprox%20%5Cexp%5Cleft(%5Cbar%7BS%7D_1(U_1%5E%7B*%7D)%20+%20%5Cfrac%7B1%7D%7B2%7D%20(U_1-U_1%5E*)%5E2%20%5Cfrac%7B%5Cpartial%5E2%20%5Cbar%7BS%7D_1%7D%7B%5Cpartial%20U_1%5E2%7D%20+%20%5Cbar%7BS%7D_2(U-U_1%5E%7B*%7D)%20+%20%5Cfrac%7B1%7D%7B2%7D%20(U_1-U_1%5E*)%5E2%20%5Cfrac%7B%5Cpartial%5E2%20%5Cbar%7BS%7D_2%7D%7B%5Cpartial%20U_2%5E2%7D%5Cright)%20%5C%5C%0A&amp;=%5COmega_1(U_1%5E*)%5COmega_2(U_2%5E*)%5Cexp%5Cleft(%20%5Cfrac%7B1%7D%7B2%7D(U_1-U_1%5E*)%5E2%20%5Cleft(%5Cfrac%7B%5Cpartial%5E2%20%5Cbar%7BS%7D_1%7D%7B%5Cpartial%20U_1%5E2%7D%20+%20%5Cfrac%7B%5Cpartial%5E2%20%5Cbar%7BS%7D_2%7D%7B%5Cpartial%20U_2%5E2%7D%5Cright)%20%5Cright)%0A%5Cend%7Baligned%7D%0A"></p>
<p>where the terms linear in <img src="https://latex.codecogs.com/png.latex?U_1-U%5E%5Cast_1"> cancel out due to the fact that the temperature related quantity reaches balance at <img src="https://latex.codecogs.com/png.latex?U_1%5E%7B*%7D">: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Cpartial%20%5Cbar%7BS%7D_1%7D%7B%5Cpartial%20U_1%7D%20=%20%5Cfrac%7B%5Cpartial%20%5Cbar%7BS%7D_2%7D%7B%5Cpartial%20U_2%7D">.</p>
<p>Because <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BS%7D%20%5Cpropto%20N"> and <img src="https://latex.codecogs.com/png.latex?U%20%5Cpropto%20N">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Cpartial%5E2%20%5Cbar%7BS%7D_1%7D%7B%5Cpartial%20U_1%5E2%7D%20+%20%5Cfrac%7B%5Cpartial%5E2%20%5Cbar%7BS%7D_2%7D%7B%5Cpartial%20U_2%5E2%7D%20%5Cpropto%20-1/N"> (the second order derivative around the maximum is negative), the exponential part becomes a gaussian distribution <img src="https://latex.codecogs.com/png.latex?%5Cpropto%20%5Cexp(%5Cfrac%7B-(U_1-U_1%5E*)%5E2%7D%7B2N%7D)%20%5Crightarrow%20%5Cexp(-N%20%5CDelta%20%5Cepsilon%5E2/2)">, where <img src="https://latex.codecogs.com/png.latex?%5CDelta%20%5Cepsilon"> is the average energy difference from the maximum per particle. When the number of particles <img src="https://latex.codecogs.com/png.latex?N"> is large, this is a super narrow distribution, as an example:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2020/gaussian_dist.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
<p>In reality, this distribution is often so sharp that the other states with energies different from the states at the maximum have negligible probabilities, and the system is dominated by the state with the maximum probability.</p>
</section>
</section>
<section id="footnotes" class="level2">
<h2 class="anchored" data-anchor-id="footnotes">Footnotes</h2>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>See derivations for Eqn. (3.48) in <a href="https://www.amazon.com/Statistical-Mechanics-Entropy-Parameters-Complexity/dp/0198566778">Statistical Mechanics: Entropy, Order Parameters, and Complexity</a> by James P. Sethna.↩︎</p></li>
<li id="fn2"><p>Appendix B in <a href="https://www.amazon.com/Thermal-Physics-2nd-Charles-Kittel/dp/0716710889">Thermo Physics</a> by Charles Kittle.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Physics</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2020-11-26-what_is_temporature.html</guid>
  <pubDate>Thu, 26 Nov 2020 15:37:53 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/2020/temperature.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Deriving the Kelvin Wake Pattern</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2020-05-24-deriving_the_kelvin_wake_pattern.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Kelvin wake is the pattern generated by objects moving through deep waters at a constant speed.</p>
<p><img src="https://feynlee.github.io/curiosity-notes/posts/https:/upload.wikimedia.org/wikipedia/commons/4/4f/Wake.avon.gorge.2boats.arp.750pix.jpg" class="img-fluid"></p>
<p>In Feynman’s lecture <sup>1</sup>, he mentioned that if one is clever enough, one can derive the Kelvin wake pattern from the fact that the pattern of the waves is stationary relative to the constant velocity of the boat; any other pattern would get lost from the boat. This post attempts to lay out the details of this derivation.</p>
<section id="phase-velocity-and-group-velocity" class="level2">
<h2 class="anchored" data-anchor-id="phase-velocity-and-group-velocity">Phase Velocity and Group Velocity</h2>
<p>Here I assume the reader has a basic understanding of the phase velocity and group velocity.</p>
<p>The phase velocity is the velocity at which the actual wave amplitudes travel, and the group velocity is the velocity at which the wave groups travel. The group velocity for water goes half as fast as the phase. This means, if one follows a particular crest of the water waves, they will find it moves forward in the group and gradually gets weaker and dies out in the front, and a weaker one in the back appears mysteriously and gets stronger, as show in the following demonstration:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/https:/upload.wikimedia.org/wikipedia/commons/d/d8/Wave_packet_propagation_%28phase_faster_than_group%2C_nondispersive%29.gif" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">By <a href="//commons.wikimedia.org/wiki/User:Becarlson">Becarlson</a> - Own work, <a href="https://creativecommons.org/licenses/by-sa/4.0">CC BY-SA 4.0</a>, <a href="https://commons.wikimedia.org/w/index.php?curid=67433782">Link</a></figcaption>
</figure>
</div>
</section>
<section id="water-waves" class="level2">
<h2 class="anchored" data-anchor-id="water-waves">Water Waves</h2>
<p>I will also take as a given the wave velocities in deep water:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0Av_%7Bphase%7D&amp;=%5Cfrac%7B%5Comega%7D%7Bk%7D=%5Csqrt%7B%5Cfrac%7Bg%5Clambda%7D%7B2%5Cpi%7D%7D=%5Csqrt%7B%5Cfrac%7Bg%7D%7Bk%7D%7D,%20%5C%5C%0Av_%7Bgroup%7D&amp;=%5Cfrac%7Bd%20%5Comega%7D%7Bd%20k%7D=%5Cfrac%7B1%7D%7B2%7D%5Csqrt%7B%5Cfrac%7Bg%5Clambda%7D%7B2%5Cpi%7D%7D=%5Cfrac%7B1%7D%7B2%7D%5Csqrt%7B%5Cfrac%7Bg%7D%7Bk%7D%7D.%0A%5Cend%7Baligned%7D"></p>
<p>Notice that the phase velocity is twice the group velocity.</p>
<p>If you’re interested, a simple explanation of the above formula is given by Feynman in his physics lectures <sup>2</sup>.</p>
</section>
</section>
<section id="derivation-of-the-kelvin-wake-pattern" class="level1">
<h1>Derivation of the Kelvin Wake Pattern</h1>
<p>The derivation follows 4 steps:</p>
<ol type="1">
<li><p><strong>A general sketch of wavefronts for a certain wave length</strong></p>
<p>Because the group velocity is half of the phase velocity, we can construct the following general propagation pattern:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2020/Kelvin_wake-phase_velocity_and_group_velocity.png" class="img-fluid figure-img" style="width:60.0%"></p>
</figure>
</div>
<p>The boat is at point A. For a certain wavelength, AD is where the wavefront would be for the phase velocity and because the group velocity is half of the phase velocity, AC is where the group of waves propagates to. The green lines are all parallel to AD and mark the phase wavefront on AC.</p></li>
<li><p><strong>Only waves with certain velocities in certain directions are stationary relative to the boat</strong></p>
<p>This can be seen by moving the wavefront pattern sketched above horizontally.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2020/Kelvin_wake-phase_velocity_propagating.png" class="img-fluid figure-img" style="width:60.0%"></p>
</figure>
</div>
<p>This procedure ensures that the wavefront pattern is stationary with respect to the boat (point A and point A’). Because the wavefront pattern’s construction is solely dependent on the phase velocity wavefront (the dashed line AD), we just have to make sure that AD propagates to A’D’ when A moves to A’:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2020/Kelvin_wake-geometry.png" class="img-fluid figure-img" style="width:60.0%"></p>
</figure>
</div>
<p>In other words, in any specific direction, only waves that have a certain phase velocity so that</p>
<p><img src="https://latex.codecogs.com/png.latex?v_p=V%20%5Csin%5Calpha,"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?V"> is the speed of the boat, will be “dragged along” by the boat. <em>In the following discussion, we will only be using waves that satisfy this condition.</em></p></li>
<li><p><strong>Connect “stationary” waves that are at the same phase to form equal-phase wavefronts</strong></p>
<p>To derive the wave pattern, we need to trace out “equal-phase lines” that connect wavefronts of the same phase.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2020/Kelvin_wake-equal_phase.png" class="img-fluid figure-img" style="width:70.0%"></p>
</figure>
</div>
<p>Every point on the equal-phase line (depicted as green in the above plot) originates from a different point on the horizontal line. Let’s pick the point O as the origin, for example, and the phase at point C can be calculated as</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cphi%20=%20%5Cfrac%7BOC%7D%7Bk_p%7D%20=%20%5Cfrac%7Bv_p%20t%7D%7B2%20k%7D%20=%20%5Cfrac%7Bgt%7D%7B2%20v_p%7D,"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?t"> is the time the boat takes to go from O to A.</p>
<p>On this equal-phase line, this phase remains constant, so now we can use this relation, together with the fact that <img src="https://latex.codecogs.com/png.latex?v_p=V%20%5Csin%20%5Calpha">, to rewrite the x, y coordinates of point C:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0A%20%20%20x%20&amp;=%20Vt%20-%20%5Cfrac%7B1%7D%7B2%7Dv_p%20t%20%5Csin%20%5Calpha%20%5C%5C%0A%20%20%20&amp;=%20Vt%20-%20%5Cfrac%7B1%7D%7B2%7DVt%20%5Csin%5E2%20%5Calpha%20%5C%5C%0A%20%20%20&amp;=%20Vt%20%5Cleft(1-%20%5Cfrac%7B1%7D%7B2%7D%20%5Csin%5E2%20%5Calpha%20%5Cright)%20%5C%5C%0A%20%20%20&amp;=%20%5Cfrac%7B2%5Cphi%20V%5E2%7D%7Bg%7D%20%5Csin%20%5Calpha%20%5Cleft(1-%20%5Cfrac%7B1%7D%7B2%7D%20%5Csin%5E2%20%5Calpha%20%5Cright)%20%5C%5C%0A%20%20%20%5C%5C%0Ay%20&amp;=%20%5Cfrac%7B1%7D%7B2%7Dv_p%20t%20%5Ccos%20%5Calpha%20%5C%5C%0A&amp;=%20%5Cfrac%7BVt%7D%7B2%7D%20%5Csin%20%5Calpha%20%5Ccos%20%5Calpha%20%5C%5C%0A&amp;=%20%5Cfrac%7B%5Cphi%20V%5E2%7D%7Bg%7D%20%5Csin%5E2%20%5Calpha%20%5Ccos%20%5Calpha%20%5C%5C%0A%5Cend%7Baligned%7D"></p>
<p>Now that x and y are written in terms of the parameter <img src="https://latex.codecogs.com/png.latex?%5Calpha"> and the constant <img src="https://latex.codecogs.com/png.latex?%5Cphi">, we can plot the equal-phase line in mathematica:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2020/Kelvin_wake-single.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div></li>
<li><p><strong>Composite all equal phase lines that are separated by <img src="https://latex.codecogs.com/png.latex?2%5Cpi"></strong></p>
<p>The peaks of waves are separated by <img src="https://latex.codecogs.com/png.latex?2%5Cpi">. Since the waves at the front of the boat (point A) are always at the peak, which has the phase of 0, the peaks of waves are at <img src="https://latex.codecogs.com/png.latex?%5Cphi%20=%202%5Cpi%20n">, where <img src="https://latex.codecogs.com/png.latex?n"> is any positive integer. Overlaying all equal-phase lines with <img src="https://latex.codecogs.com/png.latex?%5Cphi%20=%202%5Cpi%20n">, we see that the peaks of waves form the famous “Kelvin Wake” pattern:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/2020/Kelvin_wake-multiple.png" class="img-fluid figure-img" style="width:80.0%"></p>
</figure>
</div>
<p>Incidentally, the waves propagating in the X-axis direction have to have the speed of <img src="https://latex.codecogs.com/png.latex?v_p=V"> to remain stationary relative to the boat. The wavelength is therefore <img src="https://latex.codecogs.com/png.latex?%5Clambda_0%20=%202%5Cpi%20V%5E2/g">. For these waves, we can plug <img src="https://latex.codecogs.com/png.latex?%5Calpha=%5Cpi/2"> into the x coordinates and see that indeed the x coordinates of the peaks <img src="https://latex.codecogs.com/png.latex?x=%5Cphi%20V%5E2/g%20=%202%5Cpi%20n%20V%5E2/g%20=%20n%5Clambda_0"> are separated by <img src="https://latex.codecogs.com/png.latex?2%5Cpi">.</p></li>
</ol>
</section>
<section id="kelvin-wake-angle" class="level1">
<h1>Kelvin Wake Angle</h1>
<p>Now that we’ve derived the wake pattern, it should be straightforward to derive the famous Kelvin Wake angle. I will leave this as an exercise to the readers. In fact, we don’t even need to have the full wake pattern to derive the Kelvin Wake angle. By noticing that this angle is the largest angle that can be formed by the line connecting the boat and the wave propagating in a certain direction whose group velocity follows <img src="https://latex.codecogs.com/png.latex?v_g=%5Cfrac%7Bv_p%7D%7B2%7D=%5Cfrac%7B1%7D%7B2%7DV%20%5Csin%20%5Calpha">, we can immediately get the Kelvin Wake angle as <img src="https://latex.codecogs.com/png.latex?%5Ctheta=%5Carctan%20%5Csqrt%7B2%7D%20-%20%5Carctan%20%5Cfrac%7B%5Csqrt%7B2%7D%7D%7B2%7D=%2019.7%5E%7B%5Ccirc%7D">.</p>
</section>
<section id="final-words" class="level1">
<h1>Final Words</h1>
<p>Notice that the speed of the boat only changes the spacing between the peaks, but the general pattern remains the same. For Kelvin Wake’s pattern construction that takes into account the size of the boat, the readers are referred to this more advanced research <sup>3</sup>.</p>
</section>
<section id="appendix" class="level1">
<h1>Appendix</h1>
<p>Minute Physics has done a very nice illustration of the wake pattern formation:</p>
<p>{% include youtube.html content=“https://youtu.be/95sQcSulRFM” %}</p>
</section>
<section id="footnotes" class="level1">
<h1>Footnotes</h1>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><a href="https://www.feynmanlectures.caltech.edu/I_51.html">Feynman Lectures on Physics Volume 1, Chapter 51.</a>↩︎</p></li>
<li id="fn2"><p><a href="https://www.feynmanlectures.caltech.edu/I_51.html">Feynman Lectures on Physics Volume 1, Chapter 51.</a>↩︎</p></li>
<li id="fn3"><p><a href="https://arxiv.org/pdf/1309.6751.pdf">Kelvin wake pattern at large Froude numbers</a>↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Physics</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2020-05-24-deriving_the_kelvin_wake_pattern.html</guid>
  <pubDate>Sun, 24 May 2020 00:00:00 GMT</pubDate>
  <media:content url="https://upload.wikimedia.org/wikipedia/commons/4/4f/Wake.avon.gorge.2boats.arp.750pix.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How to Write the setup.py File for Python Packages</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2019-09-22-how-to-write-the-setup.py-file-for-python-packages.html</link>
  <description><![CDATA[ 




<section id="basic-setup" class="level2">
<h2 class="anchored" data-anchor-id="basic-setup">Basic Setup</h2>
<p>The documentation for the setup.py file is not very clear, and I think the quickest way to learn this is through an example, so here is an example of some of the minimum things to configure in the setup.py:</p>
<p>If your folder structure is the following (see <a href="https://blog.ionelmc.ro/2014/05/25/python-packaging/#id13">here</a> for why this structure is preferred):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource plain number-lines code-with-copy"><code class="sourceCode"><span id="cb1-1">- Project_folder</span>
<span id="cb1-2">- src</span>
<span id="cb1-3">- PACKAGE_NAME</span>
<span id="cb1-4">      - __init__.py</span>
<span id="cb1-5">      - data</span>
<span id="cb1-6">      - ...</span>
<span id="cb1-7">- test</span>
<span id="cb1-8">- setup.py</span></code></pre></div>
<p>we can use the following setup.py.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> setuptools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> setup, find_packages</span>
<span id="cb2-2"></span>
<span id="cb2-3">setup(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>PACKAGE_NAME,</span>
<span id="cb2-4">      maintainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>AUTHOR,</span>
<span id="cb2-5">      version<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>PACKAGE_VERSION,</span>
<span id="cb2-6">      install_requires<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pandas'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numpy'</span>],</span>
<span id="cb2-7">      package_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'src'</span>},</span>
<span id="cb2-8">      packages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>find_packages(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'src'</span>),</span>
<span id="cb2-9">      package_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{PACKAGE_NAME: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/*'</span>]},</span>
<span id="cb2-10">      include_package_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb2-11">      description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DESCRIPTION,</span>
<span id="cb2-12">      python_requires<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;=3.6'</span>)</span></code></pre></div>
<ul>
<li><p>The name, maintainer, and version are self-explanatory.</p></li>
<li><p><code>install_requires</code> specifies the dependent python packages so that when installing your package, if some of these packages are not already installed in the user’s system, they will be downloaded and installed. One can <a href="https://packaging.python.org/discussions/install-requires-vs-requirements/">specify version requirements for each package here too</a>.</p></li>
<li><p><code>packages</code> specifies all packages to include<sup>1</sup>. They should be specified in the form of <code>[foo, foo.bar, foo.tar, foo.bar.tool, ...]</code>, where foo.bar, foo.tar and foo.bar.tool are sub-packages. All sub-packages need to be listed explicitly.</p>
<p>If you put all packages under one folder, you can use the find_packages function to automatically find all packages under that folder.</p></li>
<li><p><code>package_dir</code> specifies where your package resides. The keys to this dictionary are package names, and an empty package name stands for the root package. In the above example, your package directly resides below the <code>src</code> folder.</p>
<p>If we have <code>package_dir={'foo': 'lib'}</code>, then it means the package foo is the folder lib. If we then have <code>packages = ['foo', 'foo.bar']</code>, Distutils will be looking for <code>lib/__init__.py</code> and <code>lib/bar/__init__.py</code> for the foo and foo.bar packages respectively.</p></li>
<li><p><code>package_data</code> specifies data files to be included for each package. The key is the package name and the value is a list of paths to the data files that relative to the directory containing the package (information from the package_dir mapping is used if appropriate).</p></li>
</ul>
</section>
<section id="why-do-we-choose-the-src-structure" class="level2">
<h2 class="anchored" data-anchor-id="why-do-we-choose-the-src-structure">Why do we choose the “src” structure?</h2>
<ol type="1">
<li><p>We could’ve put our package directly under the project folder:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource plain number-lines code-with-copy"><code class="sourceCode"><span id="cb3-1">- Project_folder</span>
<span id="cb3-2">- PACKAGE_NAME</span>
<span id="cb3-3">      - __init__.py</span>
<span id="cb3-4">      - data</span>
<span id="cb3-5">      - ...</span>
<span id="cb3-6">- test</span>
<span id="cb3-7">- setup.py</span></code></pre></div>
<p>But then when we write our tests, the local package with the same PACKAGE_NAME will be imported instead of the installed package in our system.</p></li>
<li><p>We could’ve put the content of our package directly under the <code>src</code> folder instead of having another folder with our package name:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource plain number-lines code-with-copy"><code class="sourceCode"><span id="cb4-1">- Project_folder</span>
<span id="cb4-2">  - src</span>
<span id="cb4-3">    - __init__.py</span>
<span id="cb4-4">    - data</span>
<span id="cb4-5">    - ...</span>
<span id="cb4-6">  - test</span>
<span id="cb4-7">  - setup.py</span></code></pre></div>
<p>This way, when we import PACKAGE_NAME, it won’t import the local package since they are under the folder named <code>src</code>. However, if we had done so, we would not only need to specify that <code>package_dir={PACKAGE_NAME: 'src'}</code>, but because the package name wouldn’t be picked up by the find_packages function, we would also need to manually list all packages in <code>packages</code>.</p></li>
<li><p>We could’ve put the test inside the package:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource plain number-lines code-with-copy"><code class="sourceCode"><span id="cb5-1">- Project_folder</span>
<span id="cb5-2">  - src</span>
<span id="cb5-3">    - __init__.py</span>
<span id="cb5-4">    - data</span>
<span id="cb5-5">    - test</span>
<span id="cb5-6">    - ...</span>
<span id="cb5-7">  - setup.py</span></code></pre></div>
<p>But then we would be distributing the test as part of the package, which is not ideal.</p></li>
</ol>
<p>In comparison, the structure we mentioned in the very beginning avoids all these problems and is therefore what I consider the best solution I’ve found so far.</p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>see here for <a href="https://stackoverflow.com/questions/7948494/whats-the-difference-between-a-python-module-and-a-python-package">discussions on the difference between packages and modules</a>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Programming</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2019-09-22-how-to-write-the-setup.py-file-for-python-packages.html</guid>
  <pubDate>Sun, 22 Sep 2019 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/setup_python.png" medium="image" type="image/png" height="106" width="144"/>
</item>
<item>
  <title>Cosmological Perspective</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2019-08-25-cosmological-perspective.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/Cosmo_Horizons.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">“Cosmic Horizons”</figcaption>
</figure>
</div>
<div class="article-in-brief">
<div class="hr-titles article-in-brief__title">
<p><span class="in-brief">In Brief</span></p>
</div>
<div class="article-in-brief__content">
<ul>
<li><strong>In an expanding universe</strong>, when we look at objects 1 billion light years away, we see what they look like LESS than 1 billion years ago. And in order to see what they look like currently, we will need to wait for MORE than 1 billion years.</li>
<li><strong>Even though we say the expansion of the universe is accelerating</strong>, the “intrinsic expansion rate”, rate at which the space is increasing at unit distance is actually slowing down.</li>
<li><strong>Because the “intrinsic expansion rate” is slowing down</strong>, light emitted from stars that are currently moving away from us at the speed of light can still be observed in the future.</li>
<li><strong>Contrary to common misconception</strong>, even in the distant future when all distant galaxies have moved outside of our cosmic event horizon, they won’t simply disappear in the sky, but instead become frozen images with the light from them more and more red-shifted.</li>
</ul>
</div>
</div>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Most lectures about cosmology I’ve seen like to start from general relativity. While it is helpful to have the mathematical background to understand the details of our current cosmological model, I find it much more important and usually more effective to first think about the conceptual problems, to shift our&nbsp;world view to the cosmological perspective. Some of the most counter-intuitive things can happen in the expanding universe, and we can understand them without knowing general relativity. We only need to assume some basic properties about the expanding universe. To focus our attention on the concepts in this chapter, I will treat the expanding universe as a theoretical construct without worrying too much about the proofs. We will leave the observational evidence for future chapters.</p>
</section>
<section id="properties-of-an-expanding-universe" class="level1">
<h1>Properties of An Expanding Universe</h1>
<ol type="1">
<li><em>The amount of space itself is increasing with time.</em></li>
<li><em>Astronomical objects are moving relative to their local space.</em></li>
</ol>
<p>One way to imagine this is to think of space as a rubber sheet. It can stretch and contract while the objects are moving on it. The fact that space can stretch and contract induces an apparent velocity even when the object is not moving relative to the local space by itself. Imagine two fixed points on the rubber sheet. The stretching or contracting of the rubber makes one move away from or towards the other. On top of this apparent motion, the relative movement with respect to the local space induces the “local velocity”. And the total effective velocity of an object seen from another will be the addition of these two motions.</p>
<p><em>On very large scales, the local motion is negligible in comparison to the apparent motion induced by the expansion of the space itself.</em></p>
</section>
<section id="definitions-of-distances" class="level1">
<h1>Definitions of distances</h1>
<p>In an expanding universe, because the distance changes with time, the distance between A and B at time 0 is no longer the same as the distance between them at time t, and these distances are not the same as the distance traveled by someone going from A to B from time 0 to time t. To describe the concept of distance in an expanding universe, we need the following definitions.</p>
<section id="co-moving-distance" class="level2">
<h2 class="anchored" data-anchor-id="co-moving-distance">Co-moving Distance</h2>
<p>To disentangle the effects of property 1 and property 2, we construct so-called “co-moving coordinates” to mark the expansion and contraction of the space itself. The co-moving distance is the distance measured on this coordinate system and is therefore fixed relative to space itself. The lattice spacing between the coordinates indicates how space itself is changing in time. And the change in the co-moving coordinates indicates a real motion relative to the local space. We denote the co-moving coordinates with the letter <img src="https://latex.codecogs.com/png.latex?r"> and the lattice spacing with <img src="https://latex.codecogs.com/png.latex?a(t)">, as a function of time. The co-moving distance will be denoted as <img src="https://latex.codecogs.com/png.latex?D_%7BC%7D">.</p>
</section>
<section id="proper-distance" class="level2">
<h2 class="anchored" data-anchor-id="proper-distance">Proper Distance</h2>
<p>Proper distance is the “real” distance between two objects, i.e.&nbsp;the lattice spacing times the co-moving distance between these two objects. In Fig. 1, the co-moving distance between coordinates 1 and 2 is always 1, but the proper distance <img src="https://latex.codecogs.com/png.latex?a(t)"> changes from 1 unit to 3 units because of the expansion. The proper distance will be denoted as <img src="https://latex.codecogs.com/png.latex?D_P">.</p>
<p>Notice that for objects fixed in space, because it is easy to convert between the co-moving distance and the proper distance, most of the time it’s not necessary to specify which one we are talking about. For example, “the distance between A and B” can be understood as either the co-moving or the proper distance, and it’s easy to work out one from the other. In that case, we will just say “distance”.</p>
</section>
<section id="traveling-distance" class="level2">
<h2 class="anchored" data-anchor-id="traveling-distance">Traveling Distance</h2>
<p><strong>This introduces the first thought experiment: in a universe where space varies with time, the proper distance an object traveled from point A at time <img src="https://latex.codecogs.com/png.latex?t_%7BA%7D"> to point B at time <img src="https://latex.codecogs.com/png.latex?t_%7BB%7D"> is in general not the same as the proper distance at time <img src="https://latex.codecogs.com/png.latex?t_A"> nor <img src="https://latex.codecogs.com/png.latex?t_B">.</strong></p>
<p>Let’s say space is expanding. As the object travels from A to B, the space in front of it is constantly increasing, so that the distance it has to travel to reach B is certainly larger than the original proper distance at time <img src="https://latex.codecogs.com/png.latex?t_%7BA%7D">. At the same time, the space behind it, i.e.&nbsp;the space it has already traveled, is also constantly expanding, so that the proper distance at time <img src="https://latex.codecogs.com/png.latex?t_%7BB%7D">, namely <img src="https://latex.codecogs.com/png.latex?D_%7BP%7D(t_%7BB%7D)=a(t_%7BB%7D)%5C%7Cr_%7BB%7D-r_%7BA%7D%5C%7C">, is larger than the distance it traversed. So in this case we have <img src="https://latex.codecogs.com/png.latex?D_%7BP%7D(t_A)%3CD_%7BT%7D%3CD_%7BP%7D(t_B)">, where we denoted the traveling distance with <img src="https://latex.codecogs.com/png.latex?D_%7BT%7D"> and the proper distance between AB at time <img src="https://latex.codecogs.com/png.latex?t_A"> and <img src="https://latex.codecogs.com/png.latex?t_B"> with <img src="https://latex.codecogs.com/png.latex?D_%7BP%7D(t_A)"> and <img src="https://latex.codecogs.com/png.latex?D_%7BP%7D(t_B)">.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/https:/fishlee919.files.wordpress.com/2015/07/embedded_lambdacdm_geometry.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Fig. 1 A view of an isometric embedding of part of the visible universe over most of its history. The vertical direction is the time and the blue circles represent the space at a certain cosmological time. This figure shows how a light ray (red line) can travel an effective distance of 28 billion light-years (orange line) in just 13 billion years of cosmological time. Here the 13 billion light-years are the traveling distance and the 28 billion light-years are the proper distance between AB at the end time.&nbsp;[This demonstration is taken from the section “Measuring distances in expanding space” in this wiki page: <a href="https://en.wikipedia.org/wiki/Metric_expansion_of_space">Metric expansion of space</a>].</figcaption>
</figure>
</div>
<p><strong>Once you figure this out, it’s easy to understand the following seemingly counterintuitive phenomena</strong>:</p>
<ul>
<li>When we look at objects that are currently 1 billion light-years away, we see what they were like LESS than 1 billion light-years away.</li>
<li>For us to see what objects that are currently 1 billion light-years away look like, we will have to wait MORE than 1 billion years.</li>
</ul>
<p>Whenever we talk about distance, we need to understand which distance at which time we are talking about. For example, when we say that we can see light from objects 28 billion light-years away even though the universe is only 13 billion years ago, what we mean is that we can see light emitted 13 billion years ago from objects that were less than 13 billion light-years away from us when the light was emitted, but now are 28 billion light-years away from us. We don’t currently see the light currently emitted by objects that are currently 28 billion light-years away.</p>
</section>
</section>
<section id="understanding-expansion" class="level1">
<h1>Understanding Expansion</h1>
<section id="the-unfortunate-definition-of-accelerating-expansion" class="level2">
<h2 class="anchored" data-anchor-id="the-unfortunate-definition-of-accelerating-expansion">The Unfortunate Definition of “Accelerating Expansion”</h2>
<p>Whether the expansion of the universe is accelerating or decelerating is defined by <img src="https://latex.codecogs.com/png.latex?%5Cddot%7Ba%7D(t)">. This is defined from the perspective that if we observe the space expansion between two fixed points on the co-moving coordinate system, whether we see the rate of space added is increasing or decreasing. But if we think about this for a minute, we will realize that more spaces may be added later, simply because there are more spaces between the two points later. In other words, the textbook definition of “accelerating expansion” is the “apparent accelerating expansion”.</p>
<p>This definition is very unfortunate, since it does not capture the “intrinsic expansion rate” of the universe and thus induces a lot of confusion, especially when we consider the event horizon of the universe, as we will see below.</p>
</section>
<section id="intrinsic-expansion-rate-the-hubble-parameter" class="level2">
<h2 class="anchored" data-anchor-id="intrinsic-expansion-rate-the-hubble-parameter">Intrinsic Expansion Rate: the Hubble Parameter</h2>
<p>To get the “intrinsic expansion rate”, we need to remove the dependence on the changing distance. This can be achieved by dividing the apparent velocity of a distant co-moving object by the proper distance in between:</p>
<p><img src="https://latex.codecogs.com/png.latex?H=%5Cdfrac%7Br%5Cdot%7Ba%7D(t)%7D%7Bra(t)%7D=%5Cdfrac%7B%5Cdot%7Ba%7D(t)%7D%7Ba(t)%7D,"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cdot%7Ba%7D(t)"> is the time derivative of <img src="https://latex.codecogs.com/png.latex?a(t)">. For those interested, Young’s modulus in solid-state physics is defined in a similar way to get rid of the length dependence so that it reflects the property of the material.</p>
<p>In other words, the Hubble parameter gives the true expansion rate.</p>
<p>To make it clearer why using <img src="https://latex.codecogs.com/png.latex?%5Cddot%7Ba%7D(t)"> to understand expansion is a bad idea, think of it this way: let’s say the Hubble parameter is not changing with time, which means the characteristic expansion of the universe is not speeding up nor slowing down. But since at a later time, <img src="https://latex.codecogs.com/png.latex?a(t)"> itself becomes larger, the induced apparent velocity at that larger proper distance will become larger, and thus <img src="https://latex.codecogs.com/png.latex?%5Cddot%7Ba%7D(t)%3E0">, and we get the conclusion that the universe’s expansion is “accelerating”. That “acceleration” is relative to the coordinate system set up from the very beginning. If instead you compare the expansion of space now to the expansion of space between objects with the same amount of proper distance in between a long time ago, the expansion can be slower.</p>
<p>How does <img src="https://latex.codecogs.com/png.latex?a(t)"> change if the intrinsic expansion rate is constant? We can solve <img src="https://latex.codecogs.com/png.latex?H=%5Cdot%7Ba%7D(t)/a(t)=%5Cbeta"> to get <img src="https://latex.codecogs.com/png.latex?a(t)=e%5E%7B%5Cbeta%20t%7D."> In other words, at a constant intrinsic expansion rate, <img src="https://latex.codecogs.com/png.latex?a(t)"> should be increasing exponentially. Therefore, any slower change of <img src="https://latex.codecogs.com/png.latex?a(t)"> corresponds to a decrease in the intrinsic expansion rate. One can check this easily with <img src="https://latex.codecogs.com/png.latex?a(t)=t%5E2">. Obviously <img src="https://latex.codecogs.com/png.latex?a(t)"> increases at an accelerating rate, but the “intrinsic expansion rate” <img src="https://latex.codecogs.com/png.latex?H=%5Cdot%7Ba%7D/a=2/t"> is actually decreasing. Said in another way, a constant <img src="https://latex.codecogs.com/png.latex?H"> corresponds to an exponentially increasing <img src="https://latex.codecogs.com/png.latex?a(t)">, while a decreasing <img src="https://latex.codecogs.com/png.latex?H"> corresponds to slower increase in <img src="https://latex.codecogs.com/png.latex?a(t)">.</p>
<p>The Hubble parameter in our standard cosmology model changes as follows. It decreases quickly in the beginning, and then gradually approaches a constant. So initially <img src="https://latex.codecogs.com/png.latex?a(t)"> increases at a rate slower than exponential, but eventually, <img src="https://latex.codecogs.com/png.latex?a(t)"> expands exponentially.</p>
<figure class="figure">
<a href=""> <img src="https://feynlee.github.io/curiosity-notes/posts/images/Cosmo_Hubble_Constant.png" width="90%" class="figure-img"> </a>
<figcaption class="figure-caption">
Fig. 2 An illustration of how the Hubble parameter changes in the standard model.
</figcaption>
</figure>
</section>
</section>
<section id="how-the-expansion-affects-our-observations" class="level1">
<h1>How the Expansion Affects Our Observations</h1>
<section id="hubble-distance" class="level2">
<h2 class="anchored" data-anchor-id="hubble-distance">Hubble Distance</h2>
<p>Hubble distance is defined as the distance at which the receding velocity is the speed of light:</p>
<p><img src="https://latex.codecogs.com/png.latex?D_H=%5Cfrac%7Bc%7D%7BH%7D."></p>
<p>However, due to the space expansion, we can see objects that are currently moving with speed above the speed of light, beyond the Hubble distance, as explained below.</p>
</section>
<section id="cosmic-event-horizon" class="level2">
<h2 class="anchored" data-anchor-id="cosmic-event-horizon">Cosmic Event Horizon</h2>
<p>The event horizon is the distance at which the photon emitted now will never reach us in the infinite future. One might naively think that this distance is the Hubble length. After all, the objects beyond the Hubble length are leaving us at speeds greater than the speed of light, so of course, their light can never reach us! Well, think again.&nbsp;</p>
<p>We will be able to see light emitted from some objects outside of our Hubble Sphere, thanks to the slowing down of the intrinsic expansion rate <img src="https://latex.codecogs.com/png.latex?H">!</p>
<section id="a-detour" class="level3">
<h3 class="anchored" data-anchor-id="a-detour">A Detour</h3>
<p>This is very counter-intuitive. Before we go into the correct explanation, I want to spell out a couple of common traps people tend to fall into when thinking about this problem:</p>
<ol type="1">
<li><p>As hinted above, people assume that just because the photons emitted from those objects are now apparently moving away from us, and the expansion is “accelerating”, there’s no way that the light emitted from these objects will reverse their course and come towards us.</p>
<p>We already explained what “accelerating expansion” really means. So the above assumption translates to: because <img src="https://latex.codecogs.com/png.latex?a(t)"> is accelerating, the apparent velocity of the object can only increase. The implicit assumption for that statement is that the apparent velocity of the object only depends on how <img src="https://latex.codecogs.com/png.latex?a(t)"> changes. Is that true? No. The apparent velocity of the photon is composed of two parts:</p>
<ul>
<li><p>the apparent velocity induced by the expansion of the universe, which is <img src="https://latex.codecogs.com/png.latex?r%5Ccdot%20%5Cdot%7Ba%7D(t)">, depends on both how <img src="https://latex.codecogs.com/png.latex?a(t)"> changes and how its co-moving coordinates <img src="https://latex.codecogs.com/png.latex?r(t)"> changes;</p></li>
<li><p>the local velocity of the photon, which is c.</p></li>
</ul>
<p>The apparent velocity of the photon is therefore <img src="https://latex.codecogs.com/png.latex?r(t)%20%5Ccdot%20%5Cdot%7Ba%7D(t)-c">.</p>
<p>Just because at one moment this value is positive (moving away from us), does not mean that it will stay that way. At the same time that <img src="https://latex.codecogs.com/png.latex?%5Cdot%7Ba%7D(t)"> is increasing, the co-moving distance <img src="https://latex.codecogs.com/png.latex?r"> is decreasing because the photon is locally heading in our direction. The apparent velocity can potentially decrease if the decreasing <img src="https://latex.codecogs.com/png.latex?r"> brings down the total apparent velocity, even though <img src="https://latex.codecogs.com/png.latex?%5Cdot%7Ba%7D(t)"> is increasing.</p></li>
<li><p>Once we understand how the apparent velocity also depends on the decreasing co-moving distance, people might assume that just because the apparent velocity might start decreasing, that will guarantee the photon can reach us.</p>
<p>Unfortunately, the apparent velocity of a photon can slow down and never get to the point where the apparent velocity is flipped. It’s hard to show this without invoking some math, but one can conceptually understand that the changes of <img src="https://latex.codecogs.com/png.latex?r(t)"> and <img src="https://latex.codecogs.com/png.latex?%5Cdot%7Ba%7D(t)"> can result in the apparent velocity <img src="https://latex.codecogs.com/png.latex?r(t)%20%5Ccdot%20%5Cdot%7Ba%7D(t)-c"> decreasing but never reaching zero.</p></li>
</ol>
</section>
<section id="explanation" class="level3">
<h3 class="anchored" data-anchor-id="explanation">Explanation</h3>
<p>It’s easy to see that reasoning using the apparent velocity is difficult and error-prone. Our first instinct and intuition lead us that way, probably because we are so used to thinking about motions in terms of how velocity changes. However, the dynamics in an expanding universe are more complex, because the velocity induced by the expansion is location-specific (it’s a function of relative distance), while the other local velocity is constant relative to space. This makes it very hard to imagine and reason about how the apparent velocity changes, since at the next moment, the location changes and the location-induced velocity changes.</p>
<p>Instead of thinking in terms of velocity, let’s think in terms of the co-moving coordinates since it’s easier to see the effect of the local motion relative to this coordinate system.</p>
<p>During a small time interval <img src="https://latex.codecogs.com/png.latex?dt">, the photon travels a distance <img src="https://latex.codecogs.com/png.latex?cdt"> in space, which gives <img src="https://latex.codecogs.com/png.latex?dr%20=%20c%20dt/a(t)"> in terms of the co-moving distance. The proper distance at a cosmological time <img src="https://latex.codecogs.com/png.latex?t"> corresponding to the total co-moving distance that can be traversed from time <img src="https://latex.codecogs.com/png.latex?t"> to the infinite future is the definition of Event Horizon:</p>
<p><img src="https://latex.codecogs.com/png.latex?R_%7BEH%7D%20=%20a(t)%5Cint_%7Bt%7D%5E%7B%5Cinfty%7D%5Cdfrac%7Bc%20dt%7D%7Ba(t)%7D."></p>
<p>When the universe is expanding at a constant intrinsic rate, <img src="https://latex.codecogs.com/png.latex?a(t)=e%5E%7B%5Cbeta%20t%7D">, we have</p>
<p><img src="https://latex.codecogs.com/png.latex?R_%7BEH%7D%20=%20%5Cdfrac%7Bc%7D%7B%5Cbeta%7D%20=%20D_%7BH%7D."></p>
<p>The Hubble Sphere coincides with the Event Horizon. It’s easy to understand then if the “intrinsic expansion rate” is not constant, but instead slowing down during the time the photon was traveling to us, it will be able to cover more ground, and therefore the Event Horizon will be larger than the Hubble distance.</p>
<p>As mentioned before, the intrinsic expansion rate of our universe is slowing down, resulting in the fact that we can observe objects outside of our current Hubble Sphere, even though the expansion rate as measured by <img src="https://latex.codecogs.com/png.latex?a(t)"> is speeding up.</p>
</section>
</section>
<section id="particle-horizon" class="level2">
<h2 class="anchored" data-anchor-id="particle-horizon">Particle Horizon</h2>
<p>The particle horizon describes the furthest distance we can see right now. And because it takes photon time to reach us and we are looking back in time as we look deeper into space, it should not be a surprise that we can see things that are currently beyond our current Hubble sphere and our current event horizon.</p>
<p>It’s very important to stress that we are not seeing what these objects look like right now since it takes time for the photon to travel to us. We are only seeing them as their younger selves when the distance to them was different.</p>
<p>Confusingly, the particle horizon is not defined in terms of the co-moving distance of these objects, which never changes, nor is it defined as the proper distance at which the photon was emitted, but instead the current proper distance of these objects, even though we are not seeing them at the current proper distance right now:</p>
<p><img src="https://latex.codecogs.com/png.latex?R_%7BPH%7D%20=%20a(t)%5Cint_%7B0%7D%5E%7Bt%7D%5Cdfrac%7Bc%20dt%7D%7Ba(t)%7D"></p>
<figure class="figure">
<p><a href=""> <img src="https://feynlee.github.io/curiosity-notes/posts/images/Cosmo_Horizons-comoving.png" width="90%" class="figure-img"> </a> <a href=""> <img src="https://feynlee.github.io/curiosity-notes/posts/images/Cosmo_Horizons-proper.png" width="90%" class="figure-img"> </a></p>
<figcaption class="figure-caption">
Fig. 3 Demonstration of how Hubble sphere (green), Event horizon (red), light ray (yellow), and Particle horizon (blue) change with the cosmological time, plotted in both the co-moving distances (top) and the proper distances (bottom). The light ray shows how it is possible to observe photons outside of the Hubble sphere. The dotted lines indicate constant co-moving distances. The black horizontal line indicates our current universe, where the particle horizon &gt; the Event horizon &gt; the Hubble sphere. The standard cosmological model is assumed. Numerical values for parameters in the model: <img src="https://latex.codecogs.com/png.latex?H_0=67.8%20%5Ctext%7Bkm/s/Mpc%7D">, <img src="https://latex.codecogs.com/png.latex?%5COmega_%7B%5CLambda%7D=0.7">, <img src="https://latex.codecogs.com/png.latex?%5COmega_%7BM%7D=0.3">, <img src="https://latex.codecogs.com/png.latex?%5COmega_%7BR%7D=%5COmega_K=0">. [Mathematical notebook used to calculate the above curves: <a href="{{ site.baseurl }}/assets/nbs/Hubble_Sphere_Observable_Universe.nb">Hubble_Sphere_Horizons_and_Observable_Universe.nb</a>.]
</figcaption>
</figure>
</section>
<section id="observable-universe" class="level2">
<h2 class="anchored" data-anchor-id="observable-universe">Observable Universe</h2>
<p>One should be extremely careful in understanding the concepts of the cosmic event horizon and the particle horizon. The cosmic event horizon is NOT the furthest distance one can see in the future. The furthest distance one can see in the future is the particle horizon in that future. As demonstrated in Fig. 3, the particle horizon is bigger than the cosmic event horizon at the present and in the future. <strong>The cosmic event horizon describes the boundary beyond which the events will never be observed, while the particle horizon describes the furthest distance one can see at a certain cosmological time.</strong></p>
<p><strong>The “observable universe” is defined by the particle horizon.</strong> This is the 93 billion light-years value quoted in <a href="https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Observable_Universe_with_Measurements_01.png/2560px-Observable_Universe_with_Measurements_01.png">this wikipedia picture</a>.&nbsp; According to Fig. 3, the size of the “observable universe” is getting bigger and bigger.</p>
</section>
<section id="what-the-sky-looks-like-in-the-far-distant-future" class="level2">
<h2 class="anchored" data-anchor-id="what-the-sky-looks-like-in-the-far-distant-future">What the Sky Looks Like In the Far Distant Future</h2>
<p>Because the light rays always go all the way back in time, it means that we will always in theory get photons from the objects emitted in the past. So it is not correct to say that when objects move out of the event horizon, we will never see them again. In fact, we will always see their younger selves before they move beyond the event horizon. As illustrated by the light rays in Fig. 3, as time goes on, the light ray (yellow) infinitely approaches the event horizon line (red). This means, in the very far distant future, these objects will seem to be frozen at the time when they started to cross the event horizon, and we never see them actually cross it.</p>
<p>As a clarification, the event horizon should not be thought of as a distance, but different distances at different times (a world line in space-time diagram), as indicated by the red line in Fig. 3. When we say the objects seem to be frozen at the event horizon, we mean, when we look out into space, the younger selves of distant objects whose light reaches us slowly approach the time when they crossed the event horizon, but never get there. Therefore, we should always be able to see distant objects as their younger selves moving closer and closer to the event horizons at corresponding times, if we still exist.</p>
<p>However, there’s another effect that we haven’t mentioned in this post: redshift. The wavelengths of photons emitted from the distant past will be stretched due to the expansion of space, so in the very distant future, even though we should still get photons from the distant past in theory, the large wavelengths of these photons will make it almost impossible to observe. This is the real reason why we won’t be able to these distant objects anymore, not because they already moved past the event horizon from our perspective.</p>
<p>Does that mean that the sky will look black in the distant future? Not if stars in our galaxy and nearby galaxies are still shining for some reason. Galaxies that are close enough to be gravitationally bound to our own when the universe expands will not be pushed away by the expansion, and could still be there. But then again, in the far distant future, stars might have already died. In that case, we won’t be able to see anything anymore.</p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>
</section>

 ]]></description>
  <category>Physics</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2019-08-25-cosmological-perspective.html</guid>
  <pubDate>Sun, 25 Aug 2019 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/Cosmo_Horizons.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Three Simple Steps to Start Using CSS Grid Template</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2019-06-16-three-simple-steps-to-start-using-css-grid-template.html</link>
  <description><![CDATA[ 




<section id="step-1-display-grid" class="level2">
<h2 class="anchored" data-anchor-id="step-1-display-grid">Step 1: Display Grid</h2>
<p>First, we change the display to be “grid”:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource css number-lines code-with-copy"><code class="sourceCode css"><span id="cb1-1">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.container</span> {</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">display</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">grid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">}</span></code></pre></div>
</section>
<section id="step-2-define-grid" class="level2">
<h2 class="anchored" data-anchor-id="step-2-define-grid">Step 2: Define Grid</h2>
<p>We then define the grid using “fr” (short for fraction) as the following:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource scss number-lines code-with-copy"><code class="sourceCode scss"><span id="cb2-1">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.container</span> {</span>
<span id="cb2-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">display</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">grid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">grid-template-columns</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>fr <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>fr <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>fr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">grid-template-rows</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>fr <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>fr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5">}</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://feynlee.github.io/curiosity-notes/posts/images/css_grid.png" class="img-fluid figure-img" style="width:70.0%"></p>
</figure>
</div>
<p>Think of each fraction as 1 unit. So the above code defines a grid with 3 columns with width 5, 1, 1 respectively and two rows with equal height. One can also define the grid using px, percentages and other units, but I find “fr” to be very convenient.</p>
</section>
<section id="step-3-place-content-into-the-grid" class="level2">
<h2 class="anchored" data-anchor-id="step-3-place-content-into-the-grid">Step 3: Place Content Into the Grid</h2>
<p>The easiest way is to use grid-template-areas:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource scss number-lines code-with-copy"><code class="sourceCode scss"><span id="cb3-1">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.container</span> {</span>
<span id="cb3-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">display</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">grid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">grid-template-columns</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>fr <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>fr <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>fr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">grid-template-rows</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>fr <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>fr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">grid-template-areas</span>:</span>
<span id="cb3-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description social rss"</span></span>
<span id="cb3-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description social rss"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8">}</span>
<span id="cb3-9"></span>
<span id="cb3-10">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.description</span> {</span>
<span id="cb3-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">grid-area</span>: description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">justify-self</span>: stretch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">align-self</span>: stretch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-14">}</span>
<span id="cb3-15">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.social</span> {</span>
<span id="cb3-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">grid-area</span>: social<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">justify-self</span>: stretch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">align-self</span>: stretch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-19">}</span>
<span id="cb3-20">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.rss</span> {</span>
<span id="cb3-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">grid-area</span>: rss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">justify-self</span>: stretch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">align-self</span>: stretch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-24">}</span></code></pre></div>
<p>We assign the <strong>grid-area</strong> attribute for each block that we want to place into the grid, and then use <strong>grid-template-areas</strong> to easily specify how they should be layed out within the grid. The <strong>justify-self</strong> and <strong>align-self</strong> attributes further specifies how they should be justified and aligned within their grid space.</p>
<p>That should get you started! It’s really that simple!</p>
<p>For more features and details about css grid, you can look up this wonderful guide: <a href="https://css-tricks.com/snippets/css/complete-guide-grid/">A Complete Guide to Grid</a>.</p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>

 ]]></description>
  <category>Programming</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2019-06-16-three-simple-steps-to-start-using-css-grid-template.html</guid>
  <pubDate>Sun, 16 Jun 2019 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/css_grid.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Export Jupyter Document With Optional Code Visibility</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2019-01-07-auto-generate-data-science-report-for-sharing.html</link>
  <description><![CDATA[ 




<section id="why" class="level2">
<h2 class="anchored" data-anchor-id="why">Why</h2>
<p>Jupyter notebooks are great for data analysis, but when we need to share the analysis, some people may not care about the code. It would be great to have a solution that automatically generates reports where the code can be toggled by a button. After some online searching and experimentation, the following is my solution.</p>
</section>
<section id="add-button-to-toggle-code" class="level2">
<h2 class="anchored" data-anchor-id="add-button-to-toggle-code">Add Button to Toggle Code</h2>
<p>Jupyter notebooks are web-based, we can simply add some HTML and javascript to make this work. One can include a raw cell at the beginning of your notebook containing the JavaScript and HTML below. This code is heavily based on <a href="http://chris-said.io/2016/02/13/how-to-make-polished-jupyter-presentations-with-optional-code-visibility/">Chris Said’s blog post</a>, except it also hides a few other things besides the input cell, including the numerical prompt next to the cells such as <code>input [1]</code> and <code>output [1]</code>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script&gt;</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">code_toggle</span>() {</span>
<span id="cb1-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (code_shown){</span>
<span id="cb1-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.input'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'500'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#toggleButton'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">val</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Show Code'</span>)</span>
<span id="cb1-6">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb1-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.input'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">show</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'500'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#toggleButton'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">val</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hide Code'</span>)</span>
<span id="cb1-9">    }</span>
<span id="cb1-10">    code_shown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>code_shown</span>
<span id="cb1-11">}</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>( <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span> )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ready</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>() {</span>
<span id="cb1-14">    code_shown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.input'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.prompt'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.back-to-top'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nav#menubar'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.breadcrumb'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.hidden-print'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-21">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/script&gt;</span></span>
<span id="cb1-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;form</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">action</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"javascript:code_toggle()"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;input</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">id</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"toggleButton"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">value</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Show Code"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/form&gt;</span></span></code></pre></div>
<p>When we export the notebook to HTML, the added code will make a toggle button. See Chris’ example <a href="https://nbviewer.jupyter.org/github/csaid/polished_notebooks/blob/master/notebook_polished.ipynb">here</a>.</p>
<p>This is good and all, but we don’t want to manually add this raw cell to every notebook we create. Plus, it takes up a lot of space and does not look good in the notebook format. <strong><em>Is there a way that Jupyter can automatically add this code to the HTML file when exporting?</em></strong></p>
<p>The answer is yes.</p>
</section>
<section id="custom-template-for-exporting-html-file" class="level2">
<h2 class="anchored" data-anchor-id="custom-template-for-exporting-html-file">Custom Template for Exporting HTML File</h2>
<p>Most people know that we can use <code>nbconvert</code> to export HTML file, but few know that we can choose a template to use during this process: <code>jupyter nbconvert --to html 'example.ipynb' --template=custom_template.tpl</code></p>
<p>This effectively gives us unlimited flexibility to format the output HTML file however we want. (For more details on how to make a custom template, please refer to the <a href="https://nbconvert.readthedocs.io/en/latest/customizing.html#Converting-a-notebook-to-an-(I)Python-script-and-printing-to-stdout">official document on customizing nbconvert</a> and the <a href="http://jinja.pocoo.org/docs/2.10/templates/">Jinja2 template language guide</a>.)</p>
<p>Unfortunately, I found that we can not directly inherit the existing template used by nbconvert, since the position we want to insert our toggle button is not available if we inherit the existing templates. We have to alter some of the existing templates to create our own.</p>
<p>If your Jupyter is installed using anaconda in a python3.6 environment called <code>py3</code>, then the default templates for generating HTML files can be found under the path:</p>
<p><code>&lt;Anaconda_Folder&gt;/envs/py3/lib/python3.6/site-packages/nbconvert/templates/html/</code>.</p>
<!-- TODO modifications to basic.tpl -->
<p>I copied the <code>full.tpl</code> template and added the script part in the <code>&lt;head&gt;</code> element:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1">#| code-fold: true</span>
<span id="cb2-2">{%- block toggle_script -%}</span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script&gt;</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">code_toggle</span>() {</span>
<span id="cb2-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (code_shown){</span>
<span id="cb2-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.input'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'500'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#toggleButton'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">val</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Show Code'</span>)</span>
<span id="cb2-8">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb2-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.input'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">show</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'500'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#toggleButton'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">val</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hide Code'</span>)</span>
<span id="cb2-11">    }</span>
<span id="cb2-12">    code_shown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>code_shown</span>
<span id="cb2-13">}</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>( <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span> )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ready</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(){</span>
<span id="cb2-16">    code_shown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.input'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.prompt'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'div.back-to-top'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nav#menubar'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.breadcrumb'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">$</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.hidden-print'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hide</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-23">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/script&gt;</span></span>
<span id="cb2-25">{%- endblock toggle_script -%}</span></code></pre></div>
<p>and the HTML part for the button to the body.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;body&gt;</span></span>
<span id="cb3-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;div</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">tabindex</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">id</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notebook"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">class</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"border-box-sizing"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;div</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">class</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"container"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">id</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notebook-container"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;form</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">action</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"javascript:code_toggle()"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;input</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">id</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"toggleButton"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">value</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Show Code"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/form&gt;</span></span>
<span id="cb3-7">        {{ super() }}</span>
<span id="cb3-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/div&gt;</span></span>
<span id="cb3-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/div&gt;</span></span>
<span id="cb3-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/body&gt;</span></span></code></pre></div>
<p>See this <a href="https://gist.github.com/feynlee/701a56a239f7034e380e850865154945">gist</a> for the full template code.</p>
</section>
<section id="use-jupyters-post-save-hook-to-automate" class="level2">
<h2 class="anchored" data-anchor-id="use-jupyters-post-save-hook-to-automate">Use Jupyter’s Post-Save Hook to Automate</h2>
<p>We can add a function in the Jupyter configuration file to automatically export HTML file whenever we save a notebook. The Jupyter configuration file can be found at “~/.jupyter/jupyter_notebook_config.py” on mac.</p>
<p>An example code for <code>jupyter_notebook_config.py</code> that exports an HTML file on save for notebooks with “Report-” in their names:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> subprocess <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> check_call</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> post_save(model, os_path, contents_manager):</span>
<span id="cb4-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""post-save hook for converting notebooks to .py scripts"""</span></span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> model[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'type'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'notebook'</span>:</span>
<span id="cb4-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># only do this for notebooks</span></span>
<span id="cb4-8">    d, fname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.split(os_path)</span>
<span id="cb4-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Report-'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> fname:</span>
<span id="cb4-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate html files</span></span>
<span id="cb4-11">        check_call([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'jupyter'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nbconvert'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--to'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'html'</span>,</span>
<span id="cb4-12">            fname, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--template=report.tpl'</span>], cwd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>d)</span>
<span id="cb4-13">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"finished creating html file </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(fname.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.ipynb'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.html'</span>)))</span>
<span id="cb4-14"></span>
<span id="cb4-15"></span>
<span id="cb4-16">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_config()</span>
<span id="cb4-17">c.FileContentsManager.post_save_hook <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> post_save</span>
<span id="cb4-18">c.NotebookApp.open_browser <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
<p>See <a href="https://jupyter-notebook.readthedocs.io/en/stable/extending/savehooks.html">Jupyter documentation on file save hooks</a> for more details on how to use save hooks.</p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>

 ]]></description>
  <category>Data Science</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2019-01-07-auto-generate-data-science-report-for-sharing.html</guid>
  <pubDate>Mon, 07 Jan 2019 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/Jupyter_Auto_Convert.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>How I solved the world’s hardest logic puzzle</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2017-01-20-how-i-solved-the-worlds-hardest-logic-puzzle.html</link>
  <description><![CDATA[ 




<p>People often show solutions to a problem without showing their thinking process, just like a magician hiding his/her methods. Instead of knowing the answer, which is no fun at all, I think it’s more important to understand the logical steps that help one reach the answer. After all, this is where the satisfaction of understanding comes from. So I thought it might be helpful to show the paths I took during my attempt to solve this puzzle.</p>
<section id="the-puzzle" class="level1">
<h1>The Puzzle</h1>
<p><img src="https://feynlee.github.io/curiosity-notes/posts/https:/fishlee919.files.wordpress.com/2017/01/7531_021f6dd88a11ca489936ae770e4634ad.png?w=1240" class="img-fluid"></p>
<p><em>For simplicity, I will denote True, False, Random gods with T, F, and R respectively.</em></p>
<p>I’ve organized and cleaned up my thoughts for better clarity. I will present the version of the solution that felt most natural to me, and explain in the final section both the much simpler solution and the unnecessarily complicated solution I originally came up with in my hurried effort to solve this puzzle.</p>
</section>
<section id="step-1.-an-overall-assessment-of-the-problem" class="level1">
<h1>Step 1. An Overall Assessment of the Problem:</h1>
<p>The first thing I did was to figure out in principle, whether this problem is solvable. There are 6 different orderings for the gods’ positions: “T, F, R”,“T, R, F”, &nbsp;“F, T, R”, “F, R, T”, “R, T, F”, “R, F, T”. This is what we need to figure out. If each question is asked to a different god, then at maximum we have <img src="https://latex.codecogs.com/png.latex?2%5E3=8"> different possible answers “da, da, da”, “da, da, ja”, “da, ja, da”, “da, ja, ja”, etc. But R’s answer provides no useful information at all, so R’s “da” and “ja” are not distinguishable. This cuts down the useful information to 4. In other words, we would need to distinguish 6 different outcomes with only 4 different pieces of information (or 2 “bits”). This is impossible!</p>
<p>The assumptions must be wrong. The 6 different positions of gods seem inarguable. So what’s wrong with the second deduction that gives us 4 pieces of info?</p>
<p>To distinguish 6 positions, we must have at least 6 pieces of info. Well, if we ask T or F 3 questions, we know we can&nbsp;get 8 pieces of info since their answers are distinguishable, and a careful reread of the question reveals that indeed it doesn’t prevent us from doing that. Each question to one god, but one god can have multiple questions.</p>
<p>But there seems to be no way for us to avoid R in the first question since we have no information to know who R is. What about avoiding R in the second and third questions? The probability that it will be R that answers the first question is <img src="https://latex.codecogs.com/png.latex?1/3">. If we can avoid R during the second and third question, we would get <img src="https://latex.codecogs.com/png.latex?1/3%20*%204+2/3%20*%208=6.66666..."> pieces of information, which makes it possible to figure out the 6 different positions! If however,&nbsp;we can only avoid R till the 3rd question, we would have <img src="https://latex.codecogs.com/png.latex?2/3%20*%204+1/3%20*%208=5.333...%20%3C%206">, which is not enough to solve the puzzle.</p>
<p><strong>Conclusion: we must be able to <em>at least</em> figure out <em>“who is not R”</em> after the first question, for the puzzle to be solvable!</strong></p>
</section>
<section id="step-2.-general-strategy" class="level1">
<h1>Step 2. General Strategy:</h1>
<p>Let’s do some more deductions to reason out the general strategy. We now know, that the first question should be able to tell us&nbsp;who’s not R. How can that be possibly achieved?</p>
<ol type="1">
<li><p>The answer to the first question can only be “da” or “ja”, 1 bit of information, which we can use to distinguish 2 different things. Conveniently, what we want to find out after question 1 is whether god 2 is not R or god 3 is not R, two things to distinguish. Therefore, we can map the answer “da” to “2 is not R” and “ja” to “3 is not R” or the other way around.</p></li>
<li><p>After we figure out who is not R, we need to ask that god the second question to make sure R is not answering question 2. We can easily duplicate the first question to figure out which one of the other two gods is not R, and therefore combing questions 1 and 2 to figure out the identity of god R.</p></li>
<li><p>That leaves us with one question to figure out T and F. Is that possible to do? If we ask this question to one of the non-random gods, we receive two distinguishable pieces of information, and we need to distinguish two things, so in principle, this is possible. But how does one do it? Let’s say we map “da” to god T, and “fa” to god F, meaning if the answer we receive is “da”, then the god is T, otherwise F. What question would make god T answer “da”, and god F answer “fa”? Since we don’t know the meaning of “da” and “fa”, we have to consider the following two scenarios: “da” means yes, and “da” means no. If “da” is yes, T needs to answer yes, and if “da” is no, T needs to answer no. So the answer to the question depends on whether “da” is yes or no. At this point, it should be obvious, that <strong>the question can simply be “is ‘da’ yes?”</strong> You can check for yourself, that T will always say “da” to this question and F will always say “fa” to this question.</p></li>
</ol>
</section>
<section id="step-3.-deduce-and-construct-question-1" class="level1">
<h1>Step 3. Deduce and Construct Question 1</h1>
<p>Now that we’ve figured out question 3, and question 2 and question 1 are basically the same, we only need to figure out question 1.</p>
<p>So is it possible to choose between the rest of the 2 gods so that we can avoid the R god?</p>
<p>When the first god happens to be R, it doesn’t matter what the answer is, and it doesn’t matter how we choose between the rest of the 2 gods. Therefore, we only need a simple mapping from the 2 possible answers to god 2 and god 3 when the first god is either T or F.</p>
<section id="i.-the-qualities-question-1-needs-to-satisfy" class="level2">
<h2 class="anchored" data-anchor-id="i.-the-qualities-question-1-needs-to-satisfy">I. The Qualities Question 1 Needs to Satisfy:</h2>
<p>Let’s take the mapping of “da” -&gt; “3 is not R” and “ja” -&gt; “2 is not R” as an example to start our reasoning. Since we don’t have to think about god 1=R, either 2 or 3 is R. The mapping reduces to “da” -&gt; “2&nbsp;is R” and “ja” -&gt; “3&nbsp;is R”.</p>
<p>This mapping requirement means no matter who (T or F) this question is asked, if the answer to “is 2 R” is yes, we should always get “da” as the answer, regardless of whether “da” means yes or no. If the answer to “is 2 R” is no, we should always get “ja” as the answer, regardless of what “ja” means.</p>
<p>To break&nbsp;this down further, we have</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Ctext%7B2%20is%20not%20R%7D%20+%20%5Cleft%5C%7B%20%5Cbegin%7Bmatrix%7D%20%5Ctext%7Bda%7D%20=%5Ctext%7Byes%7D%20%5CRightarrow%20%5Ctext%7Byes%20(da)%7D%5C%5C%20%5Ctext%7Bda%7D=%5Ctext%7Bno%7D%20%5CRightarrow%20%5Ctext%7Bno%20(da)%7D%20%5Cend%7Bmatrix%7D%5Cright."></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Ctext%7B2%20is%20R%7D%20+%20%5Cleft%5C%7B%20%5Cbegin%7Bmatrix%7D%20%5Ctext%7Bda%7D=%5Ctext%7Byes%7D%20%5CRightarrow%20%5Ctext%7Bno%20(ja)%7D%5C%5C%20%5Ctext%7Bda%7D=%5Ctext%7Bno%7D%20%5CRightarrow%20%5Ctext%7Byes%20(ja)%7D%5Cend%7Bmatrix%7D%20%5Cright."></p>
<ol type="1">
<li><p><strong>Both T and F should give the same yes or no answer so that it doesn’t matter which god is answering the question.</strong></p></li>
<li><p><strong>Whether “da” is yes or no should flip the yes or no answer, so that when “da” means yes, the god says&nbsp;“da” (yes), and when “da” means no, the god also says “da” (no).</strong></p></li>
<li><p><strong>Whether&nbsp;“2 is R” should also flip the yes or no answer, so that “da” flips to “ja”.</strong></p></li>
</ol>
</section>
<section id="ii.-construction-of-the-question" class="level2">
<h2 class="anchored" data-anchor-id="ii.-construction-of-the-question">II. Construction of the Question:</h2>
<section id="a.-satisfying-requirement-1" class="level3">
<h3 class="anchored" data-anchor-id="a.-satisfying-requirement-1">a. Satisfying Requirement 1:</h3>
<p>Let’s look at requirement 1 first:&nbsp;how is it possible to ask a question, such that both gods would give the same answer? Since for most simple questions, T and F would give opposite answers, we need to combine their answers in some way to get agreements. A&nbsp;simple trick that can achieve this immediately comes to mind: <strong>chain T’s answer with R’s answer with an embedded question.</strong></p>
<blockquote class="blockquote">
<p>Note: This was also my downfall.&nbsp;As I will explain later, there’s another way of getting consistent answers between T and F gods that leads to a simpler overall solution. But I was so eager to test out this first strategy&nbsp;that came to my mind, that I didn’t explore other possibilities. Let me now continue my reasoning following this way of constructing&nbsp;the question.</p>
</blockquote>
<p>Still assuming we are only dealing with T and F, we can ask for example: “would the other god (one of T and F) answer yes&nbsp;to the question Q”? Question Q is just an embedded question. I will leave the details of the deduction to the readers, and just say no matter who answers the question (T or F) and who the other god is (F or T), if the truthful answer to Q is yes, then we will get a no answer, and vice versa, because F in the chain would flip the answer once.</p>
</section>
<section id="b.-satisfying-requirement-2" class="level3">
<h3 class="anchored" data-anchor-id="b.-satisfying-requirement-2">b. Satisfying&nbsp;Requirement 2:</h3>
<p>Requirement 2 introduced 2 different scenarios: “da” is yes or “da is no. And depending on which is the case, the answer changes. The solution is very easy, we just compound this element on top of the chaining question we constructed above. Simply change”yes” to “da” (or “ja”) to cover the ambiguity of “da”:&nbsp;“<em>would the other god answer ‘da’ to the question&nbsp;Q</em>”?</p>
<p>When “da”=yes, the above question translates to the original “would the other god answer yes&nbsp;to the question&nbsp;Q”, when “da”=no, it translates to “would the other god answer no to the question&nbsp;Q”. The same chain structure guarantees the same answer between T and F gods as before, but now the answer also flips depending&nbsp;on the meaning of “da”.</p>
</section>
<section id="c.-satisfying-requirement-3" class="level3">
<h3 class="anchored" data-anchor-id="c.-satisfying-requirement-3">c.&nbsp;Satisfying Requirement 3:</h3>
<p>“is 2 R” should also flip the answer, which means we need to incorporate it into our question as well. Well, we haven’t specified what Q is yet. Any simple question can replace Q’s position and still meet requirements 1 and 2, and the truthful answer to this question Q would flip the chain since it changes the starting point of the chain. Therefore, the question now becomes:&nbsp;“<em>would the other god answer ‘da’ to the question ‘is 2 R’</em>”?</p>
<p>Again, I leave&nbsp;the detailed&nbsp;deduction of the answers in different scenarios to the readers.</p>
</section>
<section id="d.-dealing-with-the-random-god" class="level3">
<h3 class="anchored" data-anchor-id="d.-dealing-with-the-random-god">d.&nbsp;Dealing with the Random God</h3>
<p>The question would work, except when we have a random god between 2 and 3, so we can’t simply say “the other god” to automatically pick out T or F from god 2 and god 3. But for our question to work, the answer to the question “is 2 R” has to be consistent and not random.</p>
<p>There’s no way that we can know which one of the other 2 gods is not R before the first question since that’s exactly what the first question is trying to figure out. If we think carefully though, we notice that we don’t need to identify which one of the other 2 gods is not R for our question to work. We only need the answer to be consistent. One way to do that is to combine the answers of the other two gods in such a way that only the non-random god’s answer is taken.</p>
<p>How to combine a consistent answer with a random answer so that the consistent answer is always taken? Well, we can use the phrase “always” to single out the consistent answer.</p>
<p><strong>The question, therefore, becomes:&nbsp;“<em>would at least one of the other 2 gods&nbsp;always answer ‘da’ to the question ‘is 2 R’</em>”?</strong></p>
<!-- ## I. A straight forward solution: -->
</section>
</section>
</section>
<section id="step-4.-putting-everything-together" class="level1">
<h1>Step 4. Putting Everything Together</h1>
<p>Having figured out the first question,&nbsp;the second and the third questions are easy to figure out. Here they are:</p>
<ol type="1">
<li><p><strong>Ask one god:&nbsp;“would&nbsp;at least one of the other 2 gods&nbsp;always answer ‘da’ to the question ‘is 2 the random god’”?</strong> If the answer is “ja”, then go to god 3 to ask the second question, if the answer is “da”, then go to god 2 to ask the second question.</p></li>
<li><p><strong>Ask the second god (god 2 or god 3 depending on the answer of question 1) the same question:&nbsp;“would&nbsp;at least one of the other 2 gods&nbsp;always answer ‘da’ to the question ‘is 2 the random god’”? (Change it to “would&nbsp;at least one of the other 2 gods&nbsp;always answer ‘da’ to the question ‘is 3 the random god’” or&nbsp;“would&nbsp;at least one of the other 2 gods&nbsp;always answer ‘da’ to the question ‘is 1 the random god’” if the second god is god 2.)</strong> If you get “da” as the answer, then the god mentioned in your question is not random, otherwise, between the other two gods, the god not mentioned in your question is not the random one. Therefore, the god left, besides the god you are asking and the god you just figured out as the other non-random god, is the random god.</p></li>
<li><p><strong>Ask one of the non-random gods: “Is ‘da’ yes?”</strong> If you receive “da” as the answer, then the god you are asking is T, otherwise F.</p></li>
</ol>
<hr>
</section>
<section id="alternative-solutions" class="level1">
<h1>Alternative Solutions</h1>
<section id="i.-a-much-simpler-solution" class="level2">
<h2 class="anchored" data-anchor-id="i.-a-much-simpler-solution">I. A Much Simpler Solution:</h2>
<p>As mentioned in Step 3.II.a, there’s another way to achieve requirement 1. Instead of chaining T and R’s answers with each other, we chain them to themselves! After all, F and F double flip is the same as T and T. The question can be asked as “would you answer ‘da’ to the question …”</p>
<p>The good thing about this is that since we don’t need to consider the situation where we are asking the random god, the god we are asking can always be treated as non-random. Therefore, we don’t need to group this god with another god, and the question becomes much simpler:</p>
<p><strong>“Would you say&nbsp;‘da’ to the question ‘is 2 the random god’”?</strong></p>
<p>Notice that this “would you say…” is an embedded question just like before “would the other god say…” It requires the god to answer about his answer to the question.</p>
<p>This dramatically simplifies the solution.</p>
</section>
<section id="ii.-my-original-very-complicated-solution" class="level2">
<h2 class="anchored" data-anchor-id="ii.-my-original-very-complicated-solution">II. My Original Very Complicated Solution</h2>
<p>Besides the other chaining method, I didn’t think about, in my hurried effort to solve this puzzle, I also rushed to get to the end and ended up with a more complicated version of question 1. Instead of asking how the god would answer the question, I was so worried about dealing with the Random god that I also grouped two gods’ answers in constructing question Q. My original first question is unnecessarily more complicated:</p>
<p><strong>“Would at least one of the other 2 gods answer ‘da’ to the question ‘would one of you and god 2 always disagree to the question is da yes’”</strong>?</p>
<p>It should be easy to see that question Q “would one of you and god 2 always disagree about the question ‘is da yes’” really is just asking is “is one of you and god 2 R”? Since T and F would always disagree on the answer to that question. And since we can ignore the case that the god you are asking the question is R, this question simplifies to “is god 2 R”?</p>
<p>I was in the mindset of grouping gods and forgot about the previous deduction that “<em>one does not need to consider the situation that the god you are asking the first question is R</em>”. This shows how important it is to go through the logical deduction steps more carefully.</p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>
</section>

 ]]></description>
  <category>Information Science</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2017-01-20-how-i-solved-the-worlds-hardest-logic-puzzle.html</guid>
  <pubDate>Fri, 20 Jan 2017 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/3_Gods.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Study Notes for D3.js - 7 Basic Concepts to Grasp</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2016-05-02-notes-for-learning-d3-js.html</link>
  <description><![CDATA[ 




<p>In this post, I summarize 7 basic concepts that I find very important to understand when learning D3.</p>
<section id="compartmentalize-the-canvas-into-groups-g-tag" class="level2">
<h2 class="anchored" data-anchor-id="compartmentalize-the-canvas-into-groups-g-tag">1. Compartmentalize the canvas into groups (“g” tag)</h2>
<p>Think of the whole visualization as many small groups of elements. Each group can have its own group of elements. Use&nbsp;<strong>select</strong> and&nbsp;<strong>append</strong> to add tags. The first thing usually is to create an svg element (the canvas):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> svg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body"</span>)</span>
<span id="cb1-2">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"svg"</span>)</span>
<span id="cb1-3">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width)</span>
<span id="cb1-4">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)</span></code></pre></div>
<p>Then within the svg element, we can add many groups, for example, the legend itself is a group, within which we have two groups, each represents an entry in the legend:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> legend <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> svg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span>)</span>
<span id="cb2-2">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'legend'</span>)</span>
<span id="cb2-3">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transform'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'translate('</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>)</span>
<span id="cb2-4">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectAll</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span>)</span>
<span id="cb2-5">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Home Team"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Others"</span>])</span>
<span id="cb2-6">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enter</span>()</span>
<span id="cb2-7">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="set-positions-of-each-group-by-setting-attributes-transform-to-translatexy-for-that-group." class="level2">
<h2 class="anchored" data-anchor-id="set-positions-of-each-group-by-setting-attributes-transform-to-translatexy-for-that-group.">2. Set positions of each group by setting attributes ‘transform’ to ‘translate(x,y)’ for that group.</h2>
<p>As shown in the above legend example. Note that the canvas origin is at the upper left corner, so the y direction goes downwards instead of upwards.</p>
</section>
<section id="bind-data-to-elements-by-selectall.datadata.enter.append" class="level2">
<h2 class="anchored" data-anchor-id="bind-data-to-elements-by-selectall.datadata.enter.append">3. Bind data to elements by ‘…selectAll.data(data).enter().append(…)’</h2>
<p>As shown in the above legend example, ‘enter()’ returns placeholder elements for data that are not yet bound to any element, while ‘exist()’&nbsp;returns elements that not yet bound to any data. ‘append’ then adds the element.</p>
</section>
<section id="use-functions-to-assign-attributes-.attr" class="level2">
<h2 class="anchored" data-anchor-id="use-functions-to-assign-attributes-.attr">4. Use functions to assign attributes ‘.attr’</h2>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1">legend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)</span>
<span id="cb3-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>i){</span>
<span id="cb3-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">})</span>
<span id="cb3-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb3-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(d){</span>
<span id="cb3-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Use ‘d’ in function for the data entry, and ‘i’ for index of the data entry.</p>
</section>
<section id="create-scale-to-map-the-domain-of-data-to-the-range-on-the-canvas" class="level2">
<h2 class="anchored" data-anchor-id="create-scale-to-map-the-domain-of-data-to-the-range-on-the-canvas">5. Create scale to map the ‘domain’ of data to the ‘range’ on the canvas</h2>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> time_extent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extent</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(d){</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> count_extent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extent</span>(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(d){</span>
<span id="cb4-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'attendance'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> time_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale</span>()</span>
<span id="cb4-10">                        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>([margin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width])</span>
<span id="cb4-11">                        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">domain</span>(time_extent)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-12"></span>
<span id="cb4-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> count_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">linear</span>()</span>
<span id="cb4-14">                          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>([height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> margin])</span>
<span id="cb4-15">                          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">domain</span>(count_extent)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Here ‘domain’ is the extent of the data range, while ‘range’ is the extent of the the plot on canvas.</p>
<p>Use ‘.scale’ method with the appropriate scale. As an example, I used the ‘linear()’ map above. For time, do ‘d3.time.scale()’.</p>
</section>
<section id="axis-are-special-functions-use-.call-on-elements-to-create-visualization-of-axis." class="level2">
<h2 class="anchored" data-anchor-id="axis-are-special-functions-use-.call-on-elements-to-create-visualization-of-axis.">6. Axis are special functions, use ‘.call()’ on elements to create visualization of axis.</h2>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> time_axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">svg</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">axis</span>()</span>
<span id="cb5-2">                      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale</span>(time_scale)</span>
<span id="cb5-3">                      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ticks</span>(d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">years</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4"></span>
<span id="cb5-5">svg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span>)</span>
<span id="cb5-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x axis'</span>)</span>
<span id="cb5-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transform'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"translate(0,"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>)</span>
<span id="cb5-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">call</span>(time_axis)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Use ‘d3.svg.axis()’ to create the axis function and set ‘.scale’ and ‘.ticks’.</p>
</section>
<section id="finally-when-reading-data-from-csv-or-other-files-one-can-transform-the-data-before-passing-it-on-to-create-visualization." class="level2">
<h2 class="anchored" data-anchor-id="finally-when-reading-data-from-csv-or-other-files-one-can-transform-the-data-before-passing-it-on-to-create-visualization.">7. Finally, when reading data from csv or other files, one can transform the data before passing it on to create visualization.</h2>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%d-%m-%Y (%H:%M h)'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-2">d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tsv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world_cup_geo.tsv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(d){</span>
<span id="cb6-3">d[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse</span>(d[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-4">d[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'attendance'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=+</span>d[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'attendance'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> draw)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>‘d3.tsv()’ reads in the data, and pass it to the anonymous function, and then feeds the result to the user-defined ‘draw’ function for visualization. This is very convenient when one needs to convert some data format before moving on to the visualization step.</p>
<p>Here I parsed the ‘date’ column and made them into a ‘Date’ type, and converted the ‘attendance’ column from string into&nbsp;a number&nbsp;using the unary operator ‘+’. The ‘draw’ is a function that draws the visualization of the dataset.</p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>

 ]]></description>
  <category>Data Science</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2016-05-02-notes-for-learning-d3-js.html</guid>
  <pubDate>Mon, 02 May 2016 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/d3_part1.png" medium="image" type="image/png" height="106" width="144"/>
</item>
<item>
  <title>Black Hole Physics in Interstellar</title>
  <dc:creator>Ziyue Li</dc:creator>
  <link>https://feynlee.github.io/curiosity-notes/posts/2014-11-22-black-hole-physics-in-interstellar.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>A rotating black hole is needed to replicate the effects in the movie. Here we use the Kerr metric for the spinning black hole:</p>
<p><img src="https://latex.codecogs.com/png.latex?ds%5E%7B2%7D=-%5Cleft(1-%5Cdfrac%7B2%20M%20r%7D%7B%5Crho%5E%7B2%7D%7D%5Cright)dt%5E%7B2%7D-%5Cdfrac%7B4%20M%20a%20r%20%5Csin%5E%7B2%7D%5Ctheta%7D%7B%5Crho%5E%7B2%7D%7Dd%5Cphi%20dt+%20%5Cdfrac%7B%5Crho%5E%7B2%7D%7D%7B%5CDelta%7Ddr%5E%7B2%7D+%5Crho%5E%7B2%7Dd%5Ctheta%5E%7B2%7D+%5Cleft(r%5E%7B2%7D+a%5E%7B2%7D+%5Cdfrac%7B2M%20r%20a%5E%7B2%7D%5Csin%5E%7B2%7D%5Ctheta%7D%7B%5Crho%5E%7B2%7D%7D%20%5Cright)d%5Cphi%5E%7B2%7D,%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?a%5Cequiv%20J/M">,&nbsp;<img src="https://latex.codecogs.com/png.latex?%5Crho%5E%7B2%7D%5Cequiv%20r%5E%7B2%7D+a%5Ccos%5E%7B2%7D%5Ctheta">, <img src="https://latex.codecogs.com/png.latex?%5CDelta%20%5Cequiv%20r%5E%7B2%7D-2M%20r+a%5E%7B2%7D."></p>
<p>In this post, I set <img src="https://latex.codecogs.com/png.latex?c=G=1"> unless otherwise specified. One needs to restore <img src="https://latex.codecogs.com/png.latex?c"> and <img src="https://latex.codecogs.com/png.latex?G"> factors in the results to obtain&nbsp;values in the standard units, for example, <img src="https://latex.codecogs.com/png.latex?r=M"> means <img src="https://latex.codecogs.com/png.latex?r=MG/c%5E2."> For detailed discussion please see reference [1].</p>
</section>
<section id="spinning-rate-of-the-black-hole" class="level1">
<h1>Spinning Rate of the Black Hole</h1>
<p><em>[Derived from Time Dilation Factor at the Innermost Stable Circular Orbit (ISCO)]</em></p>
<p>In the movie, 1 hour on Miller’s planet equals 7 years on earth. To get that time dilation effect, one normally needs to be close enough to the black hole. And because Miller’s planet is in a stable orbit as suggested in the movie, there’s a limit to how close it can be to the black hole. Another way to generate time dilation effects is through the spinning of the black hole. In the following calculation, we will show that to get the time dilation at the innermost stable circular orbit, the black hole needs to spin super fast.</p>
<p>We assume that Miller’s planet is orbiting in the equatorial plane <img src="https://latex.codecogs.com/png.latex?(%5Ctheta=%5Cpi/2)">, so that <img src="https://latex.codecogs.com/png.latex?%5Crho%5Crightarrow%20r">, <img src="https://latex.codecogs.com/png.latex?%5Csin%5Ctheta%5Crightarrow1">, <img src="https://latex.codecogs.com/png.latex?%5Ccos%5Ctheta%5Crightarrow0,"> and the metric becomes</p>
<p><img src="https://latex.codecogs.com/png.latex?ds%5E%7B2%7D=-%5Cleft(1-%5Cdfrac%7B2%20M%20r%7D%7Br%5E%7B2%7D%7D%5Cright)dt%5E%7B2%7D-%5Cdfrac%7B4%20M%20a%20%7D%7Br%7Dd%5Cphi%20dt+%20%5Cdfrac%7Br%5E%7B2%7D%7D%7B%5CDelta%7Ddr%5E%7B2%7D+%5Crho%5E%7B2%7Dd%5Ctheta%5E%7B2%7D+%5Cleft(%20r%5E%7B2%7D+a%5E%7B2%7D+%5Cdfrac%7B2M%20a%5E%7B2%7D%7D%7Br%7D%20%5Cright)d%5Cphi%5E%7B2%7D."></p>
<p>The horizon is at&nbsp;[2]</p>
<p><img src="https://latex.codecogs.com/png.latex?r_%7Bhr%7D=M+%20%5Csqrt%7BM%5E%7B2%7D-a%5E%7B2%7D%7D."></p>
<p>The time dilation for a stable circular orbit is&nbsp;[2]</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7Bdt%7D%7Bd%5Ctau%7D=%5Cdfrac%7Ba%20%5Csqrt%7BM%7D+r%5E%7B3/2%7D%7D%7B%5Csqrt%7B2%20a%20%5Csqrt%7BM%7D%20r%5E%7B3/2%7D-3%20M%20r%5E2+r%5E3%7D%7D."></p>
<p>And the innermost stable circular orbit (ISCO) is at <img src="https://latex.codecogs.com/png.latex?r=r_%7BISCO%7D"> which&nbsp;is a solution to the following equation&nbsp;[2]</p>
<p><img src="https://latex.codecogs.com/png.latex?0=1-6%5Cdfrac%7BM%7D%7Br%7D+8%5Cdfrac%7Ba%20M%5E%7B1/2%7D%7D%7Br%5E%7B3/2%7D%7D-3%5Cdfrac%7Ba%5E%7B2%7D%7D%7Br%5E%7B2%7D%7D."></p>
<p>Plotting <img src="https://latex.codecogs.com/png.latex?r_%7Brh%7D,%20r_%7BISCO%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7Bdt%7D%7Bd%5Ctau%7D"> as functions of <img src="https://latex.codecogs.com/png.latex?r"> and <img src="https://latex.codecogs.com/png.latex?a">, we get</p>
<div style="text-align:center">
<img src="https://feynlee.github.io/curiosity-notes/posts/https:/fishlee919.files.wordpress.com/2014/11/risco-rbh-and-time-dilation-factor.jpg" width="500">
</div>
<p>The red line indicates the location of the black hole horizon, the orange line indicates the location of the ISCO, and the blue curve gives the time dilation factor as a function of coordinate <img src="https://latex.codecogs.com/png.latex?r">. This plot is generated for <img src="https://latex.codecogs.com/png.latex?a=0.8M">. As <img src="https://latex.codecogs.com/png.latex?a"> increases, ISCO moves closer to the horizon, and the time dilation at ISCO becomes bigger. Therefore, to get the extreme time dilation of 1 hour equals 7 years as depicted in the movie, the black hole has to spin very fast, and <img src="https://latex.codecogs.com/png.latex?a"> takes almost its extremal value <img src="https://latex.codecogs.com/png.latex?M."> We now proceed to derive this spin rate.</p>
<p>We parametrize <img src="https://latex.codecogs.com/png.latex?a"> in the following way:</p>
<p><img src="https://latex.codecogs.com/png.latex?a=M(1-%5Cepsilon),%20"> where <img src="https://latex.codecogs.com/png.latex?%5Cepsilon"> is very small. With&nbsp;the equations quoted above, it follows that&nbsp;[2]</p>
<p><img src="https://latex.codecogs.com/png.latex?r_%7Bhr%7D=M(1+%5Csqrt%7B2%5Cepsilon%7D),%20"></p>
<p><img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D=M%5B1+(4%5Cepsilon)%5E%7B1/3%7D%5D."></p>
<p>The time dilation at this <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D"> is therefore</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cleft.%5Cdfrac%7Bdt%7D%7Bd%5Ctau%7D%5Cright%7C_%7BISCO%7D=%5Cdfrac%7B2%7D%7B%5Csqrt%7B3%7D%7D%5Cleft(%5Cdfrac%7B2%7D%7B%5Cepsilon%7D%5Cright)%5E%7B1/3%7D."></p>
<p>Setting it to <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7B%5Ctext%7B7%20years%7D%7D%7B%5Ctext%7B1%20hour%7D%7D=61320,"> we find <img src="https://latex.codecogs.com/png.latex?%5Cepsilon=1.34%20e%20-14."></p>
<p>Assuming Miller’s planet is at this innermost stable circular orbit, then this is the appropriate <img src="https://latex.codecogs.com/png.latex?%5Cepsilon"> value for the movie.&nbsp;Therefore the black hole in the movie is spinning at a rate that’s only 100 trillionths away from the maximum.&nbsp;And the horizon and innermost stable orbit are at <img src="https://latex.codecogs.com/png.latex?r_%7Bhr%7D=1.00000016M,"> and <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D=1.00004M."></p>
</section>
<section id="mass-of-the-black-hole" class="level1">
<h1>Mass of the Black Hole</h1>
<p><em>[Derived From Tidal Force Balance]</em></p>
<p>The tidal force generated by the black hole across Miller’s planet must be smaller than the inward gravitational acceleration on the planet’s surface generated by the planet’s mass, otherwise, the planet would be torn apart. Using this fact, we can derive the limit to the mass of the black hole.</p>
<p>First, let’s derive the tidal force generated across Miller’s planet. Two conserved quantities can be found respectively, because the metric has a time translation symmetry under <img src="https://latex.codecogs.com/png.latex?t%5Crightarrow%20t+%5Cdelta%20t"> and azimuthal symmetry under <img src="https://latex.codecogs.com/png.latex?%5Cphi%5Crightarrow%20%5Cphi+%5Cdelta%5Cphi"> (see&nbsp;[1, 2] and&nbsp;[<a href="http://www.tapir.caltech.edu/~chirata/ph236/2011-12/lec27.pdf">here</a>]):</p>
<p><img src="https://latex.codecogs.com/png.latex?e=%5Cdfrac%7B1%20-%202M/r%20+%20a%20M%5E%7B1/2%7D/r%5E%7B3/2%7D%7D%7B%5Csqrt%7B1%20-%203M/r%20+%202%20a%20M%5E%7B1/2%7D/r%5E%7B3/2%7D%7D%7D,"></p>
<p><img src="https://latex.codecogs.com/png.latex?l=%5Cdfrac%7BM%5E%7B1/2%7Dr%5E%7B1/2%7D-2%20a%20M/r%20+%20M%5E%7B1/2%7Da%5E%7B2%7D/r%5E%7B3/2%7D%7D%7B%5Csqrt%7B1%20-%203M/r%20+%202aM%5E%7B1/2%7D/r%5E%7B3/2%7D%7D%7D."></p>
<p>Plugging in the <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D"> and <img src="https://latex.codecogs.com/png.latex?a"> values derived for this movie, one gets</p>
<p><img src="https://latex.codecogs.com/png.latex?e=0.57737,"></p>
<p><img src="https://latex.codecogs.com/png.latex?l=1.15474M,"></p>
<p>for the innermost stable circular orbit.</p>
<p>The radial velocity at <img src="https://latex.codecogs.com/png.latex?r"> is given by [1]</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7Bdr%7D%7Bd%5Ctau%7D=%5Csqrt%7Be%5E2-1+%5Cdfrac%7B2%20M%7D%7Br%7D-%5Cdfrac%7Bl%5E2-a%5E2%20%5Cleft(e%5E2-1%5Cright)%7D%7B2%20r%5E2%7D+%5Cdfrac%7B2%20M%20(l-a%20e)%5E2%7D%7Br%5E3%7D%7D."></p>
<p>The gravitational acceleration is obtained by</p>
<p><img src="https://latex.codecogs.com/png.latex?g=%5Cdfrac%7Bd%5E%7B2%7Dr%7D%7Bd%5Ctau%5E%7B2%7D%7D=%5Cdfrac%7Bd%5E%7B2%7Dr%7D%7Bd%5Ctau%20dr%7D%5Cdfrac%7Bdr%7D%7Bd%5Ctau%7D,%20"></p>
<p>so&nbsp;the gravitational difference across the radius of Miller’s planet <img src="https://latex.codecogs.com/png.latex?r_%7BMiller%7D"> in the radial direction is</p>
<p><img src="https://latex.codecogs.com/png.latex?g_%7Btidal%7D=%5Cdfrac%7Bdg%7D%7Bdr%7Dr_%7BMiller%7D=%5Cdfrac%7B3c%5E%7B6%7D%7D%7BM%5E%7B2%7DG%5E%7B2%7D%7Dr_%7BMiller%7D,%20"></p>
<p>where c and G are restored in the last step and <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D=1.00004M"> is used. Notice that this differs from Kip Thorne’s formula because he used the familiar Newtonian gravitational acceleration generated by a mass at rest (<img src="https://latex.codecogs.com/png.latex?GM/R%5E2">), which gives the tidal force</p>
<p><img src="https://latex.codecogs.com/png.latex?g_%7Btidal%7D=%5Cdfrac%7B2%20G%20M%7D%7BR%5E%7B3%7D%7Dr_%7BMiller%7D=%5Cdfrac%7B2c%5E%7B6%7D%7D%7BM%5E%7B2%7DG%5E%7B2%7D%7Dr_%7BMiller%7D,%20"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?R=r_%7BISCO%7D%5Csimeq%20M"> is used and c and G restored in the last step. Also, notice that because we assume the</p>
<p>On the other hand, the gravitational acceleration produced by Miller’s planet on the surface is</p>
<p><img src="https://latex.codecogs.com/png.latex?g_%7BMiller%7D=G%5Cdfrac%7B%5Cdfrac%7B4%5Cpi%7D%7B3%7Dr%5E%7B3%7D%5Crho%7D%7Br%5E%7B2%7D%7D=%5Cdfrac%7B4%5Cpi%7D%7B3%7DG%20r%5Crho."></p>
<p>The condition that tidal force does not rip apart Miller’s planet is</p>
<p><img src="https://latex.codecogs.com/png.latex?g_%7BMiller%7D%3Eg_%7Btidal%7D."></p>
<p>With <img src="https://latex.codecogs.com/png.latex?%5Crho=10000%5C;%20kg/m%5E%7B3%7D"> (number chosen by Kip Thorne for that of compressed rock), our tidal force would give</p>
<p><img src="https://latex.codecogs.com/png.latex?M_%7Bbh%7D%3E%5Cdfrac%7B3%20c%5E%7B3%7D%7D%7B%5Csqrt%7B4%5Cpi%20G%5E%7B3%7D%5Crho%7D%7D=4.2e38%5C;%20kg"></p>
<p>or about the same as 210 million suns, while&nbsp;Kip Thorne’s tidal acceleration&nbsp;would&nbsp;result in</p>
<p><img src="https://latex.codecogs.com/png.latex?M_%7Bbh%7D%3E%5Cdfrac%7B%5Csqrt%7B3%7Dc%5E%7B3%7D%7D%7B%5Csqrt%7B2%5Cpi%20G%5E%7B3%7D%5Crho%7D%7D=3.4e38%5C;%20kg"></p>
<p>or about the same as 170 million suns.</p>
<p>Kip Thorne chose the mass of the black hole to be about 100 million suns as an approximation in his book, acknowledging that it should be 200 million suns. So for the sake of comparison, we will also use <img src="https://latex.codecogs.com/png.latex?M_%7Bbh%7D=1e8%20M_%7Bsun%7D=1.99e38%5C;%20kg"> from now on.</p>
<p>For later convenience, we here define&nbsp;a&nbsp;distance unit corresponding to this black hole mass:</p>
<p><img src="https://latex.codecogs.com/png.latex?r_%7Bunit%7D=%5Cdfrac%7BM_%7Bbh%7D%20G%7D%7Bc%5E%7B2%7D%7D=1.47e8%5C;%20km,%20"> which is about the same as the earth-sun distance.</p>
</section>
<section id="position-of-millers-planet-and-the-parking-orbit" class="level1">
<h1>Position of Miller’s Planet and the Parking&nbsp;Orbit</h1>
<p>To get a sense of relative scale, we can ask: what are the radial distances of Miller’s planet and the parking orbit to the event horizon of the black hole?</p>
<p>Chris Nolan wanted the parking orbit to have modest time dilation relative to the earth, so in Kip’s interpretation, he chose the parking orbit at <img src="https://latex.codecogs.com/png.latex?r_%7Bparking%7D=10M_%7Bbh%7D=10r_%7Bunit%7D."> Plugging this value into the <img src="https://latex.codecogs.com/png.latex?dt/d%5Ctau">, we find the time dilation factor at this orbit to be about 1.2 (compared to earth time), which is reasonable.</p>
<p>Note that because of the distortion in space, the circumference of the orbit is much less than <img src="https://latex.codecogs.com/png.latex?2%5Cpi"> times the radial proper distance to the center of the black hole (the distance traveling on the membrane in the following figure). We reduce the 3-dimensional space to 2-dimension, and use the third direction to show what our space looked like in a higher dimension:</p>
<div style="text-align:center">
<img src="https://feynlee.github.io/curiosity-notes/posts/https:/fishlee919.files.wordpress.com/2014/11/rvsz.jpg" width="800">
</div>
<p>The yellow circle is the parking orbit for Endurance, the blue circle is the orbit for Miller’s planet, and the black circle at the bottom is the horizon. We see&nbsp;that because of the space distortion, even though the <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D"> value is very close to <img src="https://latex.codecogs.com/png.latex?r_%7Bhr%7D"> (which produces similar radii for the circles), the proper distance between them (the distance on this “membrane” traversed by the spaceship) is much larger than expected.</p>
<p>The radius of the circle is the proper distance of the orbit divided by <img src="https://latex.codecogs.com/png.latex?2%5Cpi">, and is given by <img src="https://latex.codecogs.com/png.latex?g_%7B%5Cphi%5Cphi%7D"> of the metric <img src="https://latex.codecogs.com/png.latex?R=%5Csqrt%7B%5Cfrac%7B2%20a%5E2%20M%7D%7Br%7D+a%5E2+r%5E2%7D">. Note that <img src="https://latex.codecogs.com/png.latex?R%3Er"> due to the spinning of the black hole (<img src="https://latex.codecogs.com/png.latex?a%5Cneq0">). For the parking orbit, <img src="https://latex.codecogs.com/png.latex?R_%7Bparking%7D%5Capprox10M_%7Bbh%7D%5Capprox10r_%7Bunit%7D">, the same as the coordinate <img src="https://latex.codecogs.com/png.latex?r">. For Miller’s planet and the horizon, <img src="https://latex.codecogs.com/png.latex?R_%7BISCO%7D%5Capprox%20R_%7Bhr%7D=2M_%7Bbh%7D=2r_%7Bunit%7D">, twice the coordinate <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D"> and <img src="https://latex.codecogs.com/png.latex?r_%7Bhr%7D."></p>
<p>We now wish to calculate the proper distance between <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D"> and <img src="https://latex.codecogs.com/png.latex?r_%7Bhr%7D">, and the proper distance between <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D"> and <img src="https://latex.codecogs.com/png.latex?r_%7Bparking%7D">. From the metric, we have</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7Bds%7D%7Bdr%7D=%5Csqrt%7B%5Cdfrac%7Br%5E2%7D%7Ba%5E2-2%20M%20r+r%5E2%7D%7D."></p>
<p>We use the parametrization of <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D=M_%7Bbh%7D(1+%5Cxi_%7BISCO%7D)">, <img src="https://latex.codecogs.com/png.latex?r_%7Bhr%7D=M_%7Bbh%7D(1+%5Cxi_%7Bhr%7D)"> and <img src="https://latex.codecogs.com/png.latex?a=M_%7Bbh%7D(1-%5Cepsilon)">. The integration produces</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cint_%7BM_%7Bbh%7D(1+%5Cxi_%7BISCO%7D)%7D%5E%7BM_%7Bbh%7D(1+%5Cxi_%7Bhr%7D)%7D%5Cdfrac%7Bds%7D%7Bdr%7Ddr=M_%7Bbh%7D%5Clog%5Cleft%5B%5Cdfrac%7B%5Cxi_%7BISCO%7D%20+%5Csqrt%7B%5Cxi_%7BISCO%7D%20%5E2+%5Cepsilon%20%5E2-2%20%5Cepsilon%7D%7D%7B%5Cxi_%7Bhr%7D%20+%5Csqrt%7B%5Cxi_%7Bhr%7D%20%5E2+%5Cepsilon%20%5E2-2%20%5Cepsilon%7D%7D%5Cright%5D%5Csimeq6.1M_%7Bbh%7D=6.1r_%7Bs%7D,%20"></p>
<p>or 6.1 times the earth-sun distance. Direct numerical integration for&nbsp;the proper distance between <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D"> and <img src="https://latex.codecogs.com/png.latex?r_%7Bparking%7D"> gives&nbsp;21.4 times the earth-sun distance.</p>
</section>
<section id="orbital-periods-at-r_isco-and-r_parking" class="level1">
<h1>Orbital Periods&nbsp;at <img src="https://latex.codecogs.com/png.latex?r_%7BISCO%7D"> and <img src="https://latex.codecogs.com/png.latex?r_%7Bparking%7D"></h1>
<p>The angular velocity is given by [2]</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Comega=%5Cdfrac%7Bd%5Cphi%7D%7Bdt%7D=%5Cdfrac%7B%5Csqrt%7BM%7D%7D%7Ba%20%5Csqrt%7BM%7D+r%5E%7B3/2%7D%7D%5Cdfrac%7Bc%5E%7B3%7D%7D%7BG%7D,%20"></p>
<p>where c and G are restored.</p>
<p>We immediately obtain <img src="https://latex.codecogs.com/png.latex?%5Comega_%7BISCO%7D=0.001%5C;%20s%5E%7B-1%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Comega_%7Bparking%7D=0.000062%5C;%20s%5E%7B-1%7D">, corresponding to 1.7 hours for Miller’s planet and 28 hours for the parking orbit respectively. Because the time slows down a factor of 61320 on Miller’s planet, the 1.7 hour period measured on the planet would be only 0.1 second, which means the planet travels around this <img src="https://latex.codecogs.com/png.latex?2%5Cpi%20R_%7BISCO%7D=8%5Cpi%20r_%7Bunit%7D"> circumference 10 times per second! That seems super fast! In fact, it’s faster than the speed of light! How can that be? Well, as Kip explains in his book, because of the space whirl induced by the black hole’s fast spin, this is slower than the local speed of light, and because of the free-falling motion, the centripetal force felt by the planet is negligible compared to the more important tidal force.</p>
</section>
<section id="rocking-period-of-millers-planet-induced-by-the-tidal-force" class="level1">
<h1>Rocking Period of Miller’s Planet Induced by the Tidal Force</h1>
<p>In one of Kip’s interpretations,&nbsp;the waves are possibly created by the rocking of the planet under the tidal force of the black hole. As he explained in his book, the planet has its face almost locked to the black hole, because otherwise the mantle would be pulverized under the tidal force. But, to produce the huge waves seen in the movie, the planet needs to rock back and forth a bit.</p>
<p>I now attempt to calculate the period of this rocking motion in a very simplified model.</p>
<div style="text-align:center">
<img src="https://feynlee.github.io/curiosity-notes/posts/https:/fishlee919.files.wordpress.com/2014/11/tidal-force-induced-rocking1.jpg" width="400">
</div>
<p>Under the tidal force,&nbsp;Miller’s&nbsp;planet would be stretched and squeezed to an ellipsoid shape. The red lines indicate the stretching direction and the blue lines indicate the squeezing direction. Let’s say the planet’s semi-major axis has length <img src="https://latex.codecogs.com/png.latex?l,"> then the torque produced by each half hemisphere has the lever arm distance of <img src="https://latex.codecogs.com/png.latex?l/2%5Ctheta."> So the torque produced by the tidal force in the black hole radial direction can be approximated to be <img src="https://latex.codecogs.com/png.latex?-%5Cdfrac%7Bm%7D%7B2%7Dg_%7Btidal%7D%5Cdfrac%7Bl%7D%7B2%7D%5Ctheta">, where <img src="https://latex.codecogs.com/png.latex?m/2"> is the mass of each hemisphere.</p>
<p>There is another torque produced by the squeezing force in the orbital direction (see Kip Thorne’s book), but here instead of calculating that, we take a guess, and approximate it to be the same amount as the torque above.&nbsp;Therefore, the total torque is <img src="https://latex.codecogs.com/png.latex?-%5Cdfrac%7Bm%7D%7B2%7Dg_%7Btidal%7Dl%5Ctheta.">&nbsp;To simplify the problem further, we use the moment of inertia formula for a solid ball instead of an ellipsoid and approximate <img src="https://latex.codecogs.com/png.latex?r_%7Bmiller%7D%5Capprox%20l">, i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?I=%5Cdfrac%7B2%7D%7B5%7Dm%20l%5E%7B2%7D.">&nbsp;We then have</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7B2%7D%7B5%7Dm%20l%5E%7B2%7D%5Cdfrac%7Bd%5E%7B2%7D%5Ctheta%7D%7Bdt%5E%7B2%7D%7D+%5Cdfrac%7Bm%7D%7B2%7Dg_%7Btidal%7Dl%5Ctheta=0."></p>
<p>The period of the oscillation is</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Comega=%5Csqrt%7B%5Cdfrac%7B5%7D%7B4%7D%5Cdfrac%7Bc%5E%7B6%7D%7D%7BG%5E%7B2%7DM%7D%7D,%20"></p>
<p>where c and G are restored. Plugging in <img src="https://latex.codecogs.com/png.latex?M=M_%7Bbh%7D">, this gives 0.0023 per second, or a period of 27 minutes, about half an hour. This differs from Kip’s result of 1 hour, which is also the time between waves used in the movie. But considering&nbsp;the estimation I did was quite poor, I’m happy with the result.</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<p><a href="" id="JH">[1]</a> J. B. Hartle, <em>Gravity: An Introduction to Einstein’s General Relativity</em> (Benjamin Cummings, 2003).</p>
<p><a href="" id="chandrasehkar">[2]</a> S. Chandrasekhar, <em>The Mathematical Theory of Black Holes</em> (Clarendon Press, Oxford University Press).</p>


<div class="sharethis-inline-share-buttons pt-5">

</div>
</section>

 ]]></description>
  <category>Physics</category>
  <guid>https://feynlee.github.io/curiosity-notes/posts/2014-11-22-black-hole-physics-in-interstellar.html</guid>
  <pubDate>Sat, 22 Nov 2014 00:00:00 GMT</pubDate>
  <media:content url="https://feynlee.github.io/curiosity-notes/posts/images/Physics_In_Interstellar.png" medium="image" type="image/png" height="144" width="144"/>
</item>
</channel>
</rss>
